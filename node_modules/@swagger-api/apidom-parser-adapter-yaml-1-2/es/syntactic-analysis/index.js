import { visit, YamlJsonSchema as JsonSchema } from '@swagger-api/apidom-ast';
import CstVisitor, { keyMap as cstKeyMap, isNode as isCstNode } from "./visitors/CstVisitor.js";
import YamlAstVisitor, { keyMap as astKeyMap, isNode as isAstNode, getNodeType as getAstNodeType } from "./visitors/YamlAstVisitor.js";
/**
 * This version of syntactic analysis does following transformations:
 *   TreeSitter CST -> YAML AST -> ApiDOM
 * Two traversals passes are needed to get from CST to ApiDOM.
 */
const analyze = (cst, {
  sourceMap = false
} = {}) => {
  const cstVisitor = CstVisitor();
  const astVisitor = YamlAstVisitor();
  const schema = JsonSchema();
  const yamlAst = visit(cst.rootNode, cstVisitor, {
    // @ts-ignore
    keyMap: cstKeyMap,
    nodePredicate: isCstNode,
    state: {
      schema,
      sourceMap
    }
  });
  return visit(yamlAst.rootNode, astVisitor, {
    // @ts-ignore
    keyMap: astKeyMap,
    // @ts-ignore
    nodeTypeGetter: getAstNodeType,
    // @ts-ignore
    nodePredicate: isAstNode,
    state: {
      sourceMap
    }
  });
};
export default analyze;