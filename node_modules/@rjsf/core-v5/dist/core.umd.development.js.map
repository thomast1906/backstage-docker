{"version":3,"file":"core.umd.development.js","sources":["../src/components/fields/ArrayField.tsx","../src/components/fields/BooleanField.tsx","../src/components/fields/MultiSchemaField.tsx","../src/components/fields/NumberField.tsx","../src/components/fields/ObjectField.tsx","../src/components/fields/SchemaField.tsx","../src/components/fields/StringField.tsx","../src/components/fields/NullField.tsx","../src/components/fields/index.ts","../src/components/templates/ArrayFieldDescriptionTemplate.tsx","../src/components/templates/ArrayFieldItemTemplate.tsx","../src/components/templates/ArrayFieldTemplate.tsx","../src/components/templates/ArrayFieldTitleTemplate.tsx","../src/components/templates/BaseInputTemplate.tsx","../src/components/templates/ButtonTemplates/SubmitButton.tsx","../src/components/templates/ButtonTemplates/IconButton.tsx","../src/components/templates/ButtonTemplates/AddButton.tsx","../src/components/templates/ButtonTemplates/index.ts","../src/components/templates/DescriptionField.tsx","../src/components/templates/ErrorList.tsx","../src/components/templates/FieldTemplate/Label.tsx","../src/components/templates/FieldTemplate/FieldTemplate.tsx","../src/components/templates/FieldErrorTemplate.tsx","../src/components/templates/FieldHelpTemplate.tsx","../src/components/templates/ObjectFieldTemplate.tsx","../src/components/templates/TitleField.tsx","../src/components/templates/UnsupportedField.tsx","../src/components/templates/WrapIfAdditionalTemplate.tsx","../src/components/templates/index.ts","../src/components/widgets/AltDateWidget.tsx","../src/components/widgets/AltDateTimeWidget.tsx","../src/components/widgets/CheckboxWidget.tsx","../src/components/widgets/CheckboxesWidget.tsx","../src/components/widgets/ColorWidget.tsx","../src/components/widgets/DateWidget.tsx","../src/components/widgets/DateTimeWidget.tsx","../src/components/widgets/EmailWidget.tsx","../src/components/widgets/FileWidget.tsx","../src/components/widgets/HiddenWidget.tsx","../src/components/widgets/PasswordWidget.tsx","../src/components/widgets/RadioWidget.tsx","../src/components/widgets/RangeWidget.tsx","../src/components/widgets/SelectWidget.tsx","../src/components/widgets/TextareaWidget.tsx","../src/components/widgets/TextWidget.tsx","../src/components/widgets/URLWidget.tsx","../src/components/widgets/UpDownWidget.tsx","../src/components/widgets/index.ts","../src/getDefaultRegistry.ts","../src/components/Form.tsx","../src/withTheme.tsx"],"sourcesContent":["import React, { Component } from \"react\";\nimport {\n  getTemplate,\n  getWidget,\n  getUiOptions,\n  isFixedItems,\n  allowAdditionalItems,\n  isCustomWidget,\n  optionsList,\n  ArrayFieldTemplateProps,\n  ErrorSchema,\n  FieldProps,\n  FormContextType,\n  IdSchema,\n  RJSFSchema,\n  StrictRJSFSchema,\n  UiSchema,\n  ITEMS_KEY,\n} from \"@rjsf/utils\";\nimport get from \"lodash/get\";\nimport isObject from \"lodash/isObject\";\nimport set from \"lodash/set\";\nimport { nanoid } from \"nanoid\";\n\n/** Type used to represent the keyed form data used in the state */\ntype KeyedFormDataType<T> = { key: string; item: T };\n\n/** Type used for the state of the `ArrayField` component */\ntype ArrayFieldState<T> = {\n  /** The keyed form data elements */\n  keyedFormData: KeyedFormDataType<T>[];\n  /** Flag indicating whether any of the keyed form data has been updated */\n  updatedKeyedFormData: boolean;\n};\n\n/** Used to generate a unique ID for an element in a row */\nfunction generateRowId() {\n  return nanoid();\n}\n\n/** Converts the `formData` into `KeyedFormDataType` data, using the `generateRowId()` function to create the key\n *\n * @param formData - The data for the form\n * @returns - The `formData` converted into a `KeyedFormDataType` element\n */\nfunction generateKeyedFormData<T>(formData: T[]): KeyedFormDataType<T>[] {\n  return !Array.isArray(formData)\n    ? []\n    : formData.map((item) => {\n        return {\n          key: generateRowId(),\n          item,\n        };\n      });\n}\n\n/** Converts `KeyedFormDataType` data into the inner `formData`\n *\n * @param keyedFormData - The `KeyedFormDataType` to be converted\n * @returns - The inner `formData` item(s) in the `keyedFormData`\n */\nfunction keyedToPlainFormData<T>(\n  keyedFormData: KeyedFormDataType<T> | KeyedFormDataType<T>[]\n): T[] {\n  if (Array.isArray(keyedFormData)) {\n    return keyedFormData.map((keyedItem) => keyedItem.item);\n  }\n  return [];\n}\n\n/** The `ArrayField` component is used to render a field in the schema that is of type `array`. It supports both normal\n * and fixed array, allowing user to add and remove elements from the array data.\n */\nclass ArrayField<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n> extends Component<FieldProps<T[], S, F>, ArrayFieldState<T>> {\n  /** Constructs an `ArrayField` from the `props`, generating the initial keyed data from the `formData`\n   *\n   * @param props - The `FieldProps` for this template\n   */\n  constructor(props: FieldProps<T[], S, F>) {\n    super(props);\n    const { formData = [] } = props;\n    const keyedFormData = generateKeyedFormData<T>(formData);\n    this.state = {\n      keyedFormData,\n      updatedKeyedFormData: false,\n    };\n  }\n\n  /** React lifecycle method that is called when the props are about to change allowing the state to be updated. It\n   * regenerates the keyed form data and returns it\n   *\n   * @param nextProps - The next set of props data\n   * @param prevState - The previous set of state data\n   */\n  static getDerivedStateFromProps<\n    T = any,\n    S extends StrictRJSFSchema = RJSFSchema,\n    F extends FormContextType = any\n  >(\n    nextProps: Readonly<FieldProps<T[], S, F>>,\n    prevState: Readonly<ArrayFieldState<T>>\n  ) {\n    // Don't call getDerivedStateFromProps if keyed formdata was just updated.\n    if (prevState.updatedKeyedFormData) {\n      return {\n        updatedKeyedFormData: false,\n      };\n    }\n    const nextFormData = Array.isArray(nextProps.formData)\n      ? nextProps.formData\n      : [];\n    const previousKeyedFormData = prevState.keyedFormData || [];\n    const newKeyedFormData =\n      nextFormData.length === previousKeyedFormData.length\n        ? previousKeyedFormData.map((previousKeyedFormDatum, index) => {\n            return {\n              key: previousKeyedFormDatum.key,\n              item: nextFormData[index],\n            };\n          })\n        : generateKeyedFormData<T>(nextFormData);\n    return {\n      keyedFormData: newKeyedFormData,\n    };\n  }\n\n  /** Returns the appropriate title for an item by getting first the title from the schema.items, then falling back to\n   * the description from the schema.items, and finally the string \"Item\"\n   */\n  get itemTitle() {\n    const { schema } = this.props;\n    return get(\n      schema,\n      [ITEMS_KEY, \"title\"],\n      get(schema, [ITEMS_KEY, \"description\"], \"Item\")\n    );\n  }\n\n  /** Determines whether the item described in the schema is always required, which is determined by whether any item\n   * may be null.\n   *\n   * @param itemSchema - The schema for the item\n   * @return - True if the item schema type does not contain the \"null\" type\n   */\n  isItemRequired(itemSchema: S) {\n    if (Array.isArray(itemSchema.type)) {\n      // While we don't yet support composite/nullable jsonschema types, it's\n      // future-proof to check for requirement against these.\n      return !itemSchema.type.includes(\"null\");\n    }\n    // All non-null array item types are inherently required by design\n    return itemSchema.type !== \"null\";\n  }\n\n  /** Determines whether more items can be added to the array. If the uiSchema indicates the array doesn't allow adding\n   * then false is returned. Otherwise, if the schema indicates that there are a maximum number of items and the\n   * `formData` matches that value, then false is returned, otherwise true is returned.\n   *\n   * @param formItems - The list of items in the form\n   * @returns - True if the item is addable otherwise false\n   */\n  canAddItem(formItems: any[]) {\n    const { schema, uiSchema } = this.props;\n    let { addable } = getUiOptions<T[], S, F>(uiSchema);\n    if (addable !== false) {\n      // if ui:options.addable was not explicitly set to false, we can add\n      // another item if we have not exceeded maxItems yet\n      if (schema.maxItems !== undefined) {\n        addable = formItems.length < schema.maxItems;\n      } else {\n        addable = true;\n      }\n    }\n    return addable;\n  }\n\n  /** Returns the default form information for an item based on the schema for that item. Deals with the possibility\n   * that the schema is fixed and allows additional items.\n   */\n  _getNewFormDataRow = (): T => {\n    const { schema, registry } = this.props;\n    const { schemaUtils } = registry;\n    let itemSchema = schema.items as S;\n    if (isFixedItems(schema) && allowAdditionalItems(schema)) {\n      itemSchema = schema.additionalItems as S;\n    }\n    // Cast this as a T to work around schema utils being for T[] caused by the FieldProps<T[], S, F> call on the class\n    return schemaUtils.getDefaultFormState(itemSchema) as unknown as T;\n  };\n\n  /** Callback handler for when the user clicks on the add or add at index buttons. Creates a new row of keyed form data\n   * either at the end of the list (when index is not specified) or inserted at the `index` when it is, adding it into\n   * the state, and then returning `onChange()` with the plain form data converted from the keyed data\n   *\n   * @param event - The event for the click\n   * @param [index] - The optional index at which to add the new data\n   */\n  _handleAddClick(event: MouseEvent, index?: number) {\n    if (event) {\n      event.preventDefault();\n    }\n\n    const { onChange } = this.props;\n    const { keyedFormData } = this.state;\n    const newKeyedFormDataRow: KeyedFormDataType<T> = {\n      key: generateRowId(),\n      item: this._getNewFormDataRow(),\n    };\n    const newKeyedFormData = [...keyedFormData];\n    if (index !== undefined) {\n      newKeyedFormData.splice(index, 0, newKeyedFormDataRow);\n    } else {\n      newKeyedFormData.push(newKeyedFormDataRow);\n    }\n    this.setState(\n      {\n        keyedFormData: newKeyedFormData,\n        updatedKeyedFormData: true,\n      },\n      () => onChange(keyedToPlainFormData(newKeyedFormData))\n    );\n  }\n\n  /** Callback handler for when the user clicks on the add button. Creates a new row of keyed form data at the end of\n   * the list, adding it into the state, and then returning `onChange()` with the plain form data converted from the\n   * keyed data\n   *\n   * @param event - The event for the click\n   */\n  onAddClick = (event: MouseEvent) => {\n    this._handleAddClick(event);\n  };\n\n  /** Callback handler for when the user clicks on the add button on an existing array element. Creates a new row of\n   * keyed form data inserted at the `index`, adding it into the state, and then returning `onChange()` with the plain\n   * form data converted from the keyed data\n   *\n   * @param index - The index at which the add button is clicked\n   */\n  onAddIndexClick = (index: number) => {\n    return (event: MouseEvent) => {\n      this._handleAddClick(event, index);\n    };\n  };\n\n  /** Callback handler for when the user clicks on the remove button on an existing array element. Removes the row of\n   * keyed form data at the `index` in the state, and then returning `onChange()` with the plain form data converted\n   * from the keyed data\n   *\n   * @param index - The index at which the remove button is clicked\n   */\n  onDropIndexClick = (index: number) => {\n    return (event: MouseEvent) => {\n      if (event) {\n        event.preventDefault();\n      }\n      const { onChange, errorSchema } = this.props;\n      const { keyedFormData } = this.state;\n      // refs #195: revalidate to ensure properly reindexing errors\n      let newErrorSchema: ErrorSchema<T>;\n      if (errorSchema) {\n        newErrorSchema = {};\n        for (const idx in errorSchema) {\n          const i = parseInt(idx);\n          if (i < index) {\n            set(newErrorSchema, [i], errorSchema[idx]);\n          } else if (i > index) {\n            set(newErrorSchema, [i - 1], errorSchema[idx]);\n          }\n        }\n      }\n      const newKeyedFormData = keyedFormData.filter((_, i) => i !== index);\n      this.setState(\n        {\n          keyedFormData: newKeyedFormData,\n          updatedKeyedFormData: true,\n        },\n        () =>\n          onChange(\n            keyedToPlainFormData(newKeyedFormData),\n            newErrorSchema as ErrorSchema<T[]>\n          )\n      );\n    };\n  };\n\n  /** Callback handler for when the user clicks on one of the move item buttons on an existing array element. Moves the\n   * row of keyed form data at the `index` to the `newIndex` in the state, and then returning `onChange()` with the\n   * plain form data converted from the keyed data\n   *\n   * @param index - The index of the item to move\n   * @param newIndex - The index to where the item is to be moved\n   */\n  onReorderClick = (index: number, newIndex: number) => {\n    return (event: React.MouseEvent<HTMLButtonElement>) => {\n      if (event) {\n        event.preventDefault();\n        event.currentTarget.blur();\n      }\n      const { onChange, errorSchema } = this.props;\n      let newErrorSchema: ErrorSchema<T>;\n      if (this.props.errorSchema) {\n        newErrorSchema = {};\n        for (const idx in errorSchema) {\n          const i = parseInt(idx);\n          if (i == index) {\n            set(newErrorSchema, [newIndex], errorSchema[index]);\n          } else if (i == newIndex) {\n            set(newErrorSchema, [index], errorSchema[newIndex]);\n          } else {\n            set(newErrorSchema, [idx], errorSchema[i]);\n          }\n        }\n      }\n\n      const { keyedFormData } = this.state;\n      function reOrderArray() {\n        // Copy item\n        const _newKeyedFormData = keyedFormData.slice();\n\n        // Moves item from index to newIndex\n        _newKeyedFormData.splice(index, 1);\n        _newKeyedFormData.splice(newIndex, 0, keyedFormData[index]);\n\n        return _newKeyedFormData;\n      }\n      const newKeyedFormData = reOrderArray();\n      this.setState(\n        {\n          keyedFormData: newKeyedFormData,\n        },\n        () =>\n          onChange(\n            keyedToPlainFormData(newKeyedFormData),\n            newErrorSchema as ErrorSchema<T[]>\n          )\n      );\n    };\n  };\n\n  /** Callback handler used to deal with changing the value of the data in the array at the `index`. Calls the\n   * `onChange` callback with the updated form data\n   *\n   * @param index - The index of the item being changed\n   */\n  onChangeForIndex = (index: number) => {\n    return (value: any, newErrorSchema?: ErrorSchema<T>, id?: string) => {\n      const { formData, onChange, errorSchema } = this.props;\n      const arrayData = Array.isArray(formData) ? formData : [];\n      const newFormData = arrayData.map((item: T, i: number) => {\n        // We need to treat undefined items as nulls to have validation.\n        // See https://github.com/tdegrunt/jsonschema/issues/206\n        const jsonValue = typeof value === \"undefined\" ? null : value;\n        return index === i ? jsonValue : item;\n      });\n      onChange(\n        newFormData,\n        errorSchema &&\n          errorSchema && {\n            ...errorSchema,\n            [index]: newErrorSchema,\n          },\n        id\n      );\n    };\n  };\n\n  /** Callback handler used to change the value for a checkbox */\n  onSelectChange = (value: any) => {\n    const { onChange, idSchema } = this.props;\n    onChange(value, undefined, idSchema && idSchema.$id);\n  };\n\n  /** Renders the `ArrayField` depending on the specific needs of the schema and uischema elements\n   */\n  render() {\n    const { schema, uiSchema, idSchema, registry } = this.props;\n    const { schemaUtils } = registry;\n    if (!(ITEMS_KEY in schema)) {\n      const uiOptions = getUiOptions<T[], S, F>(uiSchema);\n      const UnsupportedFieldTemplate = getTemplate<\n        \"UnsupportedFieldTemplate\",\n        T[],\n        S,\n        F\n      >(\"UnsupportedFieldTemplate\", registry, uiOptions);\n\n      return (\n        <UnsupportedFieldTemplate\n          schema={schema}\n          idSchema={idSchema}\n          reason=\"Missing items definition\"\n          registry={registry}\n        />\n      );\n    }\n    if (schemaUtils.isMultiSelect(schema)) {\n      // If array has enum or uniqueItems set to true, call renderMultiSelect() to render the default multiselect widget or a custom widget, if specified.\n      return this.renderMultiSelect();\n    }\n    if (isCustomWidget<T[], S, F>(uiSchema)) {\n      return this.renderCustomWidget();\n    }\n    if (isFixedItems(schema)) {\n      return this.renderFixedArray();\n    }\n    if (schemaUtils.isFilesArray(schema, uiSchema)) {\n      return this.renderFiles();\n    }\n    return this.renderNormalArray();\n  }\n\n  /** Renders a normal array without any limitations of length\n   */\n  renderNormalArray() {\n    const {\n      schema,\n      uiSchema = {},\n      errorSchema,\n      idSchema,\n      name,\n      disabled = false,\n      readonly = false,\n      autofocus = false,\n      required = false,\n      registry,\n      onBlur,\n      onFocus,\n      idPrefix,\n      idSeparator = \"_\",\n      rawErrors,\n    } = this.props;\n    const { keyedFormData } = this.state;\n    const title = schema.title === undefined ? name : schema.title;\n    const { schemaUtils, formContext } = registry;\n    const uiOptions = getUiOptions<T[], S, F>(uiSchema);\n    const _schemaItems: S = isObject(schema.items)\n      ? (schema.items as S)\n      : ({} as S);\n    const itemsSchema: S = schemaUtils.retrieveSchema(_schemaItems);\n    const formData = keyedToPlainFormData(this.state.keyedFormData);\n    const canAdd = this.canAddItem(formData);\n    const arrayProps: ArrayFieldTemplateProps<T[], S, F> = {\n      canAdd,\n      items: keyedFormData.map((keyedItem, index) => {\n        const { key, item } = keyedItem;\n        // While we are actually dealing with a single item of type T, the types require a T[], so cast\n        const itemCast = item as unknown as T[];\n        const itemSchema = schemaUtils.retrieveSchema(_schemaItems, itemCast);\n        const itemErrorSchema = errorSchema\n          ? (errorSchema[index] as ErrorSchema<T[]>)\n          : undefined;\n        const itemIdPrefix = idSchema.$id + idSeparator + index;\n        const itemIdSchema = schemaUtils.toIdSchema(\n          itemSchema,\n          itemIdPrefix,\n          itemCast,\n          idPrefix,\n          idSeparator\n        );\n        return this.renderArrayFieldItem({\n          key,\n          index,\n          name: name && `${name}-${index}`,\n          canAdd,\n          canMoveUp: index > 0,\n          canMoveDown: index < formData.length - 1,\n          itemSchema,\n          itemIdSchema,\n          itemErrorSchema,\n          itemData: itemCast,\n          itemUiSchema: uiSchema.items,\n          autofocus: autofocus && index === 0,\n          onBlur,\n          onFocus,\n          rawErrors,\n          totalItems: keyedFormData.length,\n        });\n      }),\n      className: `field field-array field-array-of-${itemsSchema.type}`,\n      disabled,\n      idSchema,\n      uiSchema,\n      onAddClick: this.onAddClick,\n      readonly,\n      required,\n      schema,\n      title,\n      formContext,\n      formData,\n      rawErrors,\n      registry,\n    };\n\n    const Template = getTemplate<\"ArrayFieldTemplate\", T[], S, F>(\n      \"ArrayFieldTemplate\",\n      registry,\n      uiOptions\n    );\n    return <Template {...arrayProps} />;\n  }\n\n  /** Renders an array using the custom widget provided by the user in the `uiSchema`\n   */\n  renderCustomWidget() {\n    const {\n      schema,\n      idSchema,\n      uiSchema,\n      disabled = false,\n      readonly = false,\n      autofocus = false,\n      required = false,\n      hideError,\n      placeholder,\n      onBlur,\n      onFocus,\n      formData: items = [],\n      registry,\n      rawErrors,\n      name,\n    } = this.props;\n    const { widgets, formContext } = registry;\n    const title = schema.title || name;\n\n    const { widget, ...options } = getUiOptions<T[], S, F>(uiSchema);\n    const Widget = getWidget<T[], S, F>(schema, widget, widgets);\n    return (\n      <Widget\n        id={idSchema.$id}\n        multiple\n        onChange={this.onSelectChange}\n        onBlur={onBlur}\n        onFocus={onFocus}\n        options={options}\n        schema={schema}\n        uiSchema={uiSchema}\n        registry={registry}\n        value={items}\n        disabled={disabled}\n        readonly={readonly}\n        hideError={hideError}\n        required={required}\n        label={title}\n        placeholder={placeholder}\n        formContext={formContext}\n        autofocus={autofocus}\n        rawErrors={rawErrors}\n      />\n    );\n  }\n\n  /** Renders an array as a set of checkboxes\n   */\n  renderMultiSelect() {\n    const {\n      schema,\n      idSchema,\n      uiSchema,\n      formData: items = [],\n      disabled = false,\n      readonly = false,\n      autofocus = false,\n      required = false,\n      placeholder,\n      onBlur,\n      onFocus,\n      registry,\n      rawErrors,\n      name,\n    } = this.props;\n    const { widgets, schemaUtils, formContext } = registry;\n    const itemsSchema = schemaUtils.retrieveSchema(schema.items as S, items);\n    const title = schema.title || name;\n    const enumOptions = optionsList(itemsSchema);\n    const { widget = \"select\", ...options } = getUiOptions<T[], S, F>(uiSchema);\n    const Widget = getWidget<T[], S, F>(schema, widget, widgets);\n    return (\n      <Widget\n        id={idSchema.$id}\n        multiple\n        onChange={this.onSelectChange}\n        onBlur={onBlur}\n        onFocus={onFocus}\n        options={{ ...options, enumOptions }}\n        schema={schema}\n        uiSchema={uiSchema}\n        registry={registry}\n        value={items}\n        disabled={disabled}\n        readonly={readonly}\n        required={required}\n        label={title}\n        placeholder={placeholder}\n        formContext={formContext}\n        autofocus={autofocus}\n        rawErrors={rawErrors}\n      />\n    );\n  }\n\n  /** Renders an array of files using the `FileWidget`\n   */\n  renderFiles() {\n    const {\n      schema,\n      uiSchema,\n      idSchema,\n      name,\n      disabled = false,\n      readonly = false,\n      autofocus = false,\n      required = false,\n      onBlur,\n      onFocus,\n      registry,\n      formData: items = [],\n      rawErrors,\n    } = this.props;\n    const title = schema.title || name;\n    const { widgets, formContext } = registry;\n    const { widget = \"files\", ...options } = getUiOptions<T[], S, F>(uiSchema);\n    const Widget = getWidget<T[], S, F>(schema, widget, widgets);\n    return (\n      <Widget\n        options={options}\n        id={idSchema.$id}\n        multiple\n        onChange={this.onSelectChange}\n        onBlur={onBlur}\n        onFocus={onFocus}\n        schema={schema}\n        uiSchema={uiSchema}\n        title={title}\n        value={items}\n        disabled={disabled}\n        readonly={readonly}\n        required={required}\n        registry={registry}\n        formContext={formContext}\n        autofocus={autofocus}\n        rawErrors={rawErrors}\n        label=\"\"\n      />\n    );\n  }\n\n  /** Renders an array that has a maximum limit of items\n   */\n  renderFixedArray() {\n    const {\n      schema,\n      uiSchema = {},\n      formData = [],\n      errorSchema,\n      idPrefix,\n      idSeparator = \"_\",\n      idSchema,\n      name,\n      disabled = false,\n      readonly = false,\n      autofocus = false,\n      required = false,\n      registry,\n      onBlur,\n      onFocus,\n      rawErrors,\n    } = this.props;\n    const { keyedFormData } = this.state;\n    let { formData: items = [] } = this.props;\n    const title = schema.title || name;\n    const uiOptions = getUiOptions<T[], S, F>(uiSchema);\n    const { schemaUtils, formContext } = registry;\n    const _schemaItems: S[] = isObject(schema.items)\n      ? (schema.items as S[])\n      : ([] as S[]);\n    const itemSchemas = _schemaItems.map((item: S, index: number) =>\n      schemaUtils.retrieveSchema(item, formData[index] as unknown as T[])\n    );\n    const additionalSchema = isObject(schema.additionalItems)\n      ? schemaUtils.retrieveSchema(schema.additionalItems as S, formData)\n      : null;\n\n    if (!items || items.length < itemSchemas.length) {\n      // to make sure at least all fixed items are generated\n      items = items || [];\n      items = items.concat(new Array(itemSchemas.length - items.length));\n    }\n\n    // These are the props passed into the render function\n    const canAdd = this.canAddItem(items) && !!additionalSchema;\n    const arrayProps: ArrayFieldTemplateProps<T[], S, F> = {\n      canAdd,\n      className: \"field field-array field-array-fixed-items\",\n      disabled,\n      idSchema,\n      formData,\n      items: keyedFormData.map((keyedItem, index) => {\n        const { key, item } = keyedItem;\n        // While we are actually dealing with a single item of type T, the types require a T[], so cast\n        const itemCast = item as unknown as T[];\n        const additional = index >= itemSchemas.length;\n        const itemSchema =\n          additional && isObject(schema.additionalItems)\n            ? schemaUtils.retrieveSchema(schema.additionalItems as S, itemCast)\n            : itemSchemas[index];\n        const itemIdPrefix = idSchema.$id + idSeparator + index;\n        const itemIdSchema = schemaUtils.toIdSchema(\n          itemSchema,\n          itemIdPrefix,\n          itemCast,\n          idPrefix,\n          idSeparator\n        );\n        const itemUiSchema = additional\n          ? uiSchema.additionalItems || {}\n          : Array.isArray(uiSchema.items)\n          ? uiSchema.items[index]\n          : uiSchema.items || {};\n        const itemErrorSchema = errorSchema\n          ? (errorSchema[index] as ErrorSchema<T[]>)\n          : undefined;\n\n        return this.renderArrayFieldItem({\n          key,\n          index,\n          name: name && `${name}-${index}`,\n          canAdd,\n          canRemove: additional,\n          canMoveUp: index >= itemSchemas.length + 1,\n          canMoveDown: additional && index < items.length - 1,\n          itemSchema,\n          itemData: itemCast,\n          itemUiSchema,\n          itemIdSchema,\n          itemErrorSchema,\n          autofocus: autofocus && index === 0,\n          onBlur,\n          onFocus,\n          rawErrors,\n          totalItems: keyedFormData.length,\n        });\n      }),\n      onAddClick: this.onAddClick,\n      readonly,\n      required,\n      registry,\n      schema,\n      uiSchema,\n      title,\n      formContext,\n      rawErrors,\n    };\n\n    const Template = getTemplate<\"ArrayFieldTemplate\", T[], S, F>(\n      \"ArrayFieldTemplate\",\n      registry,\n      uiOptions\n    );\n    return <Template {...arrayProps} />;\n  }\n\n  /** Renders the individual array item using a `SchemaField` along with the additional properties required to be send\n   * back to the `ArrayFieldItemTemplate`.\n   *\n   * @param props - The props for the individual array item to be rendered\n   */\n  renderArrayFieldItem(props: {\n    key: string;\n    index: number;\n    name: string;\n    canAdd: boolean;\n    canRemove?: boolean;\n    canMoveUp?: boolean;\n    canMoveDown?: boolean;\n    itemSchema: S;\n    itemData: T[];\n    itemUiSchema: UiSchema<T[], S, F>;\n    itemIdSchema: IdSchema<T[]>;\n    itemErrorSchema?: ErrorSchema<T[]>;\n    autofocus?: boolean;\n    onBlur: FieldProps<T[], S, F>[\"onBlur\"];\n    onFocus: FieldProps<T[], S, F>[\"onFocus\"];\n    rawErrors?: string[];\n    totalItems: number;\n  }) {\n    const {\n      key,\n      index,\n      name,\n      canAdd,\n      canRemove = true,\n      canMoveUp = true,\n      canMoveDown = true,\n      itemSchema,\n      itemData,\n      itemUiSchema,\n      itemIdSchema,\n      itemErrorSchema,\n      autofocus,\n      onBlur,\n      onFocus,\n      rawErrors,\n      totalItems,\n    } = props;\n    const {\n      disabled,\n      hideError,\n      idPrefix,\n      idSeparator,\n      readonly,\n      uiSchema,\n      registry,\n      formContext,\n    } = this.props;\n    const {\n      fields: { ArraySchemaField, SchemaField },\n    } = registry;\n    const ItemSchemaField = ArraySchemaField || SchemaField;\n    const { orderable = true, removable = true } = getUiOptions<T[], S, F>(\n      uiSchema\n    );\n    const has: { [key: string]: boolean } = {\n      moveUp: orderable && canMoveUp,\n      moveDown: orderable && canMoveDown,\n      remove: removable && canRemove,\n      toolbar: false,\n    };\n    has.toolbar = Object.keys(has).some((key: keyof typeof has) => has[key]);\n\n    return {\n      children: (\n        <ItemSchemaField\n          name={name}\n          index={index}\n          schema={itemSchema}\n          uiSchema={itemUiSchema}\n          formData={itemData}\n          formContext={formContext}\n          errorSchema={itemErrorSchema}\n          idPrefix={idPrefix}\n          idSeparator={idSeparator}\n          idSchema={itemIdSchema}\n          required={this.isItemRequired(itemSchema)}\n          onChange={this.onChangeForIndex(index)}\n          onBlur={onBlur}\n          onFocus={onFocus}\n          registry={registry}\n          disabled={disabled}\n          readonly={readonly}\n          hideError={hideError}\n          autofocus={autofocus}\n          rawErrors={rawErrors}\n        />\n      ),\n      className: \"array-item\",\n      disabled,\n      canAdd,\n      hasToolbar: has.toolbar,\n      hasMoveUp: has.moveUp,\n      hasMoveDown: has.moveDown,\n      hasRemove: has.remove,\n      index,\n      totalItems,\n      key,\n      onAddIndexClick: this.onAddIndexClick,\n      onDropIndexClick: this.onDropIndexClick,\n      onReorderClick: this.onReorderClick,\n      readonly,\n      registry,\n      schema: itemSchema,\n      uiSchema: itemUiSchema,\n    };\n  }\n}\n\n/** `ArrayField` is `React.ComponentType<FieldProps<T[], S, F>>` (necessarily) but the `registry` requires things to be a\n * `Field` which is defined as `React.ComponentType<FieldProps<T, S, F>>`, so cast it to make `registry` happy.\n */\nexport default ArrayField;\n","import React from \"react\";\nimport {\n  getWidget,\n  getUiOptions,\n  optionsList,\n  FieldProps,\n  FormContextType,\n  EnumOptionsType,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from \"@rjsf/utils\";\nimport isObject from \"lodash/isObject\";\n\n/** The `BooleanField` component is used to render a field in the schema is boolean. It constructs `enumOptions` for the\n * two boolean values based on the various alternatives in the schema.\n *\n * @param props - The `FieldProps` for this template\n */\nfunction BooleanField<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: FieldProps<T, S, F>) {\n  const {\n    schema,\n    name,\n    uiSchema,\n    idSchema,\n    formData,\n    registry,\n    required,\n    disabled,\n    readonly,\n    autofocus,\n    onChange,\n    onFocus,\n    onBlur,\n    rawErrors,\n  } = props;\n  const { title } = schema;\n  const { widgets, formContext } = registry;\n  const { widget = \"checkbox\", ...options } = getUiOptions<T, S, F>(uiSchema);\n  const Widget = getWidget(schema, widget, widgets);\n\n  let enumOptions: EnumOptionsType<S>[] | undefined;\n\n  if (Array.isArray(schema.oneOf)) {\n    enumOptions = optionsList<S>({\n      oneOf: schema.oneOf\n        .map((option) => {\n          if (isObject(option)) {\n            return {\n              ...option,\n              title: option.title || (option.const === true ? \"Yes\" : \"No\"),\n            };\n          }\n          return undefined;\n        })\n        .filter((o: any) => o) as S[], // cast away the error that typescript can't grok is fixed\n    } as unknown as S);\n  } else {\n    // We deprecated enumNames in v5. It's intentionally omitted from RSJFSchema type, so we need to cast here.\n    const schemaWithEnumNames = schema as S & { enumNames?: string[] };\n    const enums = schema.enum ?? [true, false];\n    if (\n      !schemaWithEnumNames.enumNames &&\n      enums.length === 2 &&\n      enums.every((v: any) => typeof v === \"boolean\")\n    ) {\n      enumOptions = [\n        {\n          value: enums[0],\n          label: enums[0] ? \"Yes\" : \"No\",\n        },\n        {\n          value: enums[1],\n          label: enums[1] ? \"Yes\" : \"No\",\n        },\n      ];\n    } else {\n      enumOptions = optionsList<S>({\n        enum: enums,\n        // NOTE: enumNames is deprecated, but still supported for now.\n        enumNames: schemaWithEnumNames.enumNames,\n      } as unknown as S);\n    }\n  }\n\n  return (\n    <Widget\n      options={{ ...options, enumOptions }}\n      schema={schema}\n      uiSchema={uiSchema}\n      id={idSchema.$id}\n      onChange={onChange}\n      onFocus={onFocus}\n      onBlur={onBlur}\n      label={title === undefined ? name : title}\n      value={formData}\n      required={required}\n      disabled={disabled}\n      readonly={readonly}\n      registry={registry}\n      formContext={formContext}\n      autofocus={autofocus}\n      rawErrors={rawErrors}\n    />\n  );\n}\n\nexport default BooleanField;\n","import React, { Component } from \"react\";\nimport get from \"lodash/get\";\nimport isEmpty from \"lodash/isEmpty\";\nimport omit from \"lodash/omit\";\nimport {\n  getUiOptions,\n  getWidget,\n  deepEquals,\n  FieldProps,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  ERRORS_KEY,\n} from \"@rjsf/utils\";\n\n/** Type used for the state of the `AnyOfField` component */\ntype AnyOfFieldState<S extends StrictRJSFSchema = RJSFSchema> = {\n  /** The currently selected option */\n  selectedOption: number;\n  /* The option schemas after retrieving all $refs */\n  retrievedOptions: S[];\n};\n\n/** The prefix used when a oneOf option does not have a title\n */\nconst UNKNOWN_OPTION_PREFIX = \"Option\";\n\n/** The `AnyOfField` component is used to render a field in the schema that is an `anyOf`, `allOf` or `oneOf`. It tracks\n * the currently selected option and cleans up any irrelevant data in `formData`.\n *\n * @param props - The `FieldProps` for this template\n */\nclass AnyOfField<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n> extends Component<FieldProps<T, S, F>, AnyOfFieldState<S>> {\n  /** Constructs an `AnyOfField` with the given `props` to initialize the initially selected option in state\n   *\n   * @param props - The `FieldProps` for this template\n   */\n  constructor(props: FieldProps<T, S, F>) {\n    super(props);\n\n    const {\n      formData,\n      options,\n      registry: { schemaUtils },\n    } = this.props;\n    // cache the retrieved options in state in case they have $refs to save doing it later\n    const retrievedOptions = options.map((opt: S) =>\n      schemaUtils.retrieveSchema(opt, formData)\n    );\n\n    this.state = {\n      retrievedOptions,\n      selectedOption: this.getMatchingOption(0, formData, retrievedOptions),\n    };\n  }\n\n  /** React lifecycle method that is called when the props and/or state for this component is updated. It recomputes the\n   * currently selected option based on the overall `formData`\n   *\n   * @param prevProps - The previous `FieldProps` for this template\n   * @param prevState - The previous `AnyOfFieldState` for this template\n   */\n  componentDidUpdate(\n    prevProps: Readonly<FieldProps<T, S, F>>,\n    prevState: Readonly<AnyOfFieldState>\n  ) {\n    const { formData, options, idSchema } = this.props;\n    const { selectedOption } = this.state;\n    let newState = this.state;\n    if (!deepEquals(prevProps.options, options)) {\n      const {\n        registry: { schemaUtils },\n      } = this.props;\n      // re-cache the retrieved options in state in case they have $refs to save doing it later\n      const retrievedOptions = options.map((opt: S) =>\n        schemaUtils.retrieveSchema(opt, formData)\n      );\n      newState = { selectedOption, retrievedOptions };\n    }\n    if (\n      !deepEquals(formData, prevProps.formData) &&\n      idSchema.$id === prevProps.idSchema.$id\n    ) {\n      const { retrievedOptions } = newState;\n      const matchingOption = this.getMatchingOption(\n        selectedOption,\n        formData,\n        retrievedOptions\n      );\n\n      if (prevState && matchingOption !== selectedOption) {\n        newState = { selectedOption: matchingOption, retrievedOptions };\n      }\n    }\n    if (newState !== this.state) {\n      this.setState(newState);\n    }\n  }\n\n  /** Determines the best matching option for the given `formData` and `options`.\n   *\n   * @param formData - The new formData\n   * @param options - The list of options to choose from\n   * @return - The index of the `option` that best matches the `formData`\n   */\n  getMatchingOption(\n    selectedOption: number,\n    formData: T | undefined,\n    options: S[]\n  ) {\n    const { schemaUtils } = this.props.registry;\n\n    const option = schemaUtils.getClosestMatchingOption(\n      formData,\n      options,\n      selectedOption\n    );\n    if (option > 0) {\n      return option;\n    }\n    // If the form data matches none of the options, use the currently selected\n    // option, assuming it's available; otherwise use the first option\n    return selectedOption || 0;\n  }\n\n  /** Callback handler to remember what the currently selected option is. In addition to that the `formData` is updated\n   * to remove properties that are not part of the newly selected option schema, and then the updated data is passed to\n   * the `onChange` handler.\n   *\n   * @param option - The new option value being selected\n   */\n  onOptionChange = (option?: string) => {\n    const { selectedOption, retrievedOptions } = this.state;\n    const { formData, onChange, registry } = this.props;\n    const { schemaUtils } = registry;\n    const intOption = option !== undefined ? parseInt(option, 10) : -1;\n    if (intOption === selectedOption) {\n      return;\n    }\n    const newOption = intOption >= 0 ? retrievedOptions[intOption] : undefined;\n    const oldOption =\n      selectedOption >= 0 ? retrievedOptions[selectedOption] : undefined;\n\n    let newFormData = schemaUtils.sanitizeDataForNewSchema(\n      newOption,\n      oldOption,\n      formData\n    );\n    if (newFormData && newOption) {\n      // Call getDefaultFormState to make sure defaults are populated on change. Pass \"excludeObjectChildren\"\n      // so that only the root objects themselves are created without adding undefined children properties\n      newFormData = schemaUtils.getDefaultFormState(\n        newOption,\n        newFormData,\n        \"excludeObjectChildren\"\n      ) as T;\n    }\n    onChange(newFormData, undefined, this.getFieldId());\n\n    this.setState({ selectedOption: intOption });\n  };\n\n  getFieldId() {\n    const { idSchema, schema } = this.props;\n    return `${idSchema.$id}${\n      schema.oneOf ? \"__oneof_select\" : \"__anyof_select\"\n    }`;\n  }\n\n  /** Renders the `AnyOfField` selector along with a `SchemaField` for the value of the `formData`\n   */\n  render() {\n    const {\n      baseType,\n      disabled = false,\n      errorSchema = {},\n      formContext,\n      onBlur,\n      onFocus,\n      registry,\n      schema,\n      uiSchema,\n    } = this.props;\n\n    const { widgets, fields } = registry;\n    const { SchemaField: _SchemaField } = fields;\n    const { selectedOption, retrievedOptions } = this.state;\n    const {\n      widget = \"select\",\n      placeholder,\n      autofocus,\n      autocomplete,\n      title = schema.title,\n      ...uiOptions\n    } = getUiOptions<T, S, F>(uiSchema);\n    const Widget = getWidget<T, S, F>({ type: \"number\" }, widget, widgets);\n    const rawErrors = get(errorSchema, ERRORS_KEY, []);\n    const fieldErrorSchema = omit(errorSchema, [ERRORS_KEY]);\n\n    const option =\n      selectedOption >= 0 ? retrievedOptions[selectedOption] || null : null;\n    let optionSchema: S;\n\n    if (option) {\n      // If the subschema doesn't declare a type, infer the type from the\n      // parent schema\n      optionSchema = option.type\n        ? option\n        : Object.assign({}, option, { type: baseType });\n    }\n\n    const optionLabel = title\n      ? `${title} ${UNKNOWN_OPTION_PREFIX.toLowerCase()}`\n      : UNKNOWN_OPTION_PREFIX;\n    const enumOptions = retrievedOptions.map(\n      (opt: { title?: string }, index: number) => ({\n        label: opt.title || `${optionLabel} ${index + 1}`,\n        value: index,\n      })\n    );\n\n    return (\n      <div className=\"panel panel-default panel-body\">\n        <div className=\"form-group\">\n          <Widget\n            id={this.getFieldId()}\n            schema={{ type: \"number\", default: 0 } as S}\n            onChange={this.onOptionChange}\n            onBlur={onBlur}\n            onFocus={onFocus}\n            disabled={disabled || isEmpty(enumOptions)}\n            multiple={false}\n            rawErrors={rawErrors}\n            errorSchema={fieldErrorSchema}\n            value={selectedOption >= 0 ? selectedOption : undefined}\n            options={{ enumOptions, ...uiOptions }}\n            registry={registry}\n            formContext={formContext}\n            placeholder={placeholder}\n            autocomplete={autocomplete}\n            autofocus={autofocus}\n            label=\"\"\n          />\n        </div>\n        {option !== null && (\n          <_SchemaField {...this.props} schema={optionSchema!} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default AnyOfField;\n","import React, { useState, useCallback } from \"react\";\nimport {\n  asNumber,\n  FieldProps,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from \"@rjsf/utils\";\n\n// Matches a string that ends in a . character, optionally followed by a sequence of\n// digits followed by any number of 0 characters up until the end of the line.\n// Ensuring that there is at least one prefixed character is important so that\n// you don't incorrectly match against \"0\".\nconst trailingCharMatcherWithPrefix = /\\.([0-9]*0)*$/;\n\n// This is used for trimming the trailing 0 and . characters without affecting\n// the rest of the string. Its possible to use one RegEx with groups for this\n// functionality, but it is fairly complex compared to simply defining two\n// different matchers.\nconst trailingCharMatcher = /[0.]0*$/;\n\n/**\n * The NumberField class has some special handling for dealing with trailing\n * decimal points and/or zeroes. This logic is designed to allow trailing values\n * to be visible in the input element, but not be represented in the\n * corresponding form data.\n *\n * The algorithm is as follows:\n *\n * 1. When the input value changes the value is cached in the component state\n *\n * 2. The value is then normalized, removing trailing decimal points and zeros,\n *    then passed to the \"onChange\" callback\n *\n * 3. When the component is rendered, the formData value is checked against the\n *    value cached in the state. If it matches the cached value, the cached\n *    value is passed to the input instead of the formData value\n */\nfunction NumberField<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: FieldProps<T, S, F>) {\n  const { registry, onChange, formData, value: initialValue } = props;\n  const [lastValue, setLastValue] = useState(initialValue);\n  const { StringField } = registry.fields;\n\n  let value = formData;\n\n  /** Handle the change from the `StringField` to properly convert to a number\n   *\n   * @param value - The current value for the change occurring\n   */\n  const handleChange = useCallback(\n    (value: FieldProps<T, S, F>[\"value\"]) => {\n      // Cache the original value in component state\n      setLastValue(value);\n\n      // Normalize decimals that don't start with a zero character in advance so\n      // that the rest of the normalization logic is simpler\n      if (`${value}`.charAt(0) === \".\") {\n        value = `0${value}`;\n      }\n\n      // Check that the value is a string (this can happen if the widget used is a\n      // <select>, due to an enum declaration etc) then, if the value ends in a\n      // trailing decimal point or multiple zeroes, strip the trailing values\n      const processed =\n        typeof value === \"string\" && value.match(trailingCharMatcherWithPrefix)\n          ? asNumber(value.replace(trailingCharMatcher, \"\"))\n          : asNumber(value);\n\n      onChange(processed as unknown as T);\n    },\n    [onChange]\n  );\n\n  if (typeof lastValue === \"string\" && typeof value === \"number\") {\n    // Construct a regular expression that checks for a string that consists\n    // of the formData value suffixed with zero or one '.' characters and zero\n    // or more '0' characters\n    const re = new RegExp(`${value}`.replace(\".\", \"\\\\.\") + \"\\\\.?0*$\");\n\n    // If the cached \"lastValue\" is a match, use that instead of the formData\n    // value to prevent the input value from changing in the UI\n    if (lastValue.match(re)) {\n      value = lastValue as unknown as T;\n    }\n  }\n\n  return <StringField {...props} formData={value} onChange={handleChange} />;\n}\n\nexport default NumberField;\n","import React, { Component } from \"react\";\nimport {\n  getTemplate,\n  getUiOptions,\n  orderProperties,\n  ErrorSchema,\n  FieldProps,\n  FormContextType,\n  GenericObjectType,\n  IdSchema,\n  RJSFSchema,\n  StrictRJSFSchema,\n  ADDITIONAL_PROPERTY_FLAG,\n  PROPERTIES_KEY,\n  REF_KEY,\n  ANY_OF_KEY,\n  ONE_OF_KEY,\n} from \"@rjsf/utils\";\nimport get from \"lodash/get\";\nimport has from \"lodash/has\";\nimport isObject from \"lodash/isObject\";\nimport set from \"lodash/set\";\nimport unset from \"lodash/unset\";\n\n/** Type used for the state of the `ObjectField` component */\ntype ObjectFieldState = {\n  /** Flag indicating whether an additional property key was modified */\n  wasPropertyKeyModified: boolean;\n  /** The set of additional properties */\n  additionalProperties: object;\n};\n\n/** The `ObjectField` component is used to render a field in the schema that is of type `object`. It tracks whether an\n * additional property key was modified and what it was modified to\n *\n * @param props - The `FieldProps` for this template\n */\nclass ObjectField<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n> extends Component<FieldProps<T, S, F>, ObjectFieldState> {\n  /** Set up the initial state */\n  state = {\n    wasPropertyKeyModified: false,\n    additionalProperties: {},\n  };\n\n  /** Returns a flag indicating whether the `name` field is required in the object schema\n   *\n   * @param name - The name of the field to check for required-ness\n   * @returns - True if the field `name` is required, false otherwise\n   */\n  isRequired(name: string) {\n    const { schema } = this.props;\n    return (\n      Array.isArray(schema.required) && schema.required.indexOf(name) !== -1\n    );\n  }\n\n  /** Returns the `onPropertyChange` handler for the `name` field. Handles the special case where a user is attempting\n   * to clear the data for a field added as an additional property. Calls the `onChange()` handler with the updated\n   * formData.\n   *\n   * @param name - The name of the property\n   * @param addedByAdditionalProperties - Flag indicating whether this property is an additional property\n   * @returns - The onPropertyChange callback for the `name` property\n   */\n  onPropertyChange = (name: string, addedByAdditionalProperties = false) => {\n    return (\n      value: T | undefined,\n      newErrorSchema?: ErrorSchema<T>,\n      id?: string\n    ) => {\n      const { formData, onChange, errorSchema } = this.props;\n      if (value === undefined && addedByAdditionalProperties) {\n        // Don't set value = undefined for fields added by\n        // additionalProperties. Doing so removes them from the\n        // formData, which causes them to completely disappear\n        // (including the input field for the property name). Unlike\n        // fields which are \"mandated\" by the schema, these fields can\n        // be set to undefined by clicking a \"delete field\" button, so\n        // set empty values to the empty string.\n        value = \"\" as unknown as T;\n      }\n      const newFormData = { ...formData, [name]: value } as unknown as T;\n      onChange(\n        newFormData,\n        errorSchema &&\n          errorSchema && {\n            ...errorSchema,\n            [name]: newErrorSchema,\n          },\n        id\n      );\n    };\n  };\n\n  /** Returns a callback to handle the onDropPropertyClick event for the given `key` which removes the old `key` data\n   * and calls the `onChange` callback with it\n   *\n   * @param key - The key for which the drop callback is desired\n   * @returns - The drop property click callback\n   */\n  onDropPropertyClick = (key: string) => {\n    return (event: DragEvent) => {\n      event.preventDefault();\n      const { onChange, formData } = this.props;\n      const copiedFormData = { ...formData } as T;\n      unset(copiedFormData, key);\n      onChange(copiedFormData);\n    };\n  };\n\n  /** Computes the next available key name from the `preferredKey`, indexing through the already existing keys until one\n   * that is already not assigned is found.\n   *\n   * @param preferredKey - The preferred name of a new key\n   * @param [formData] - The form data in which to check if the desired key already exists\n   * @returns - The name of the next available key from `preferredKey`\n   */\n  getAvailableKey = (preferredKey: string, formData?: T) => {\n    const { uiSchema } = this.props;\n    const { duplicateKeySuffixSeparator = \"-\" } = getUiOptions<T, S, F>(\n      uiSchema\n    );\n\n    let index = 0;\n    let newKey = preferredKey;\n    while (has(formData, newKey)) {\n      newKey = `${preferredKey}${duplicateKeySuffixSeparator}${++index}`;\n    }\n    return newKey;\n  };\n\n  /** Returns a callback function that deals with the rename of a key for an additional property for a schema. That\n   * callback will attempt to rename the key and move the existing data to that key, calling `onChange` when it does.\n   *\n   * @param oldValue - The old value of a field\n   * @returns - The key change callback function\n   */\n  onKeyChange = (oldValue: any) => {\n    return (value: any, newErrorSchema: ErrorSchema<T>) => {\n      if (oldValue === value) {\n        return;\n      }\n      const { formData, onChange, errorSchema } = this.props;\n\n      value = this.getAvailableKey(value, formData);\n      const newFormData: GenericObjectType = {\n        ...(formData as GenericObjectType),\n      };\n      const newKeys: GenericObjectType = { [oldValue]: value };\n      const keyValues = Object.keys(newFormData).map((key) => {\n        const newKey = newKeys[key] || key;\n        return { [newKey]: newFormData[key] };\n      });\n      const renamedObj = Object.assign({}, ...keyValues);\n\n      this.setState({ wasPropertyKeyModified: true });\n\n      onChange(\n        renamedObj,\n        errorSchema &&\n          errorSchema && {\n            ...errorSchema,\n            [value]: newErrorSchema,\n          }\n      );\n    };\n  };\n\n  /** Returns a default value to be used for a new additional schema property of the given `type`\n   *\n   * @param type - The type of the new additional schema property\n   */\n  getDefaultValue(type?: RJSFSchema[\"type\"]) {\n    switch (type) {\n      case \"string\":\n        return \"New Value\";\n      case \"array\":\n        return [];\n      case \"boolean\":\n        return false;\n      case \"null\":\n        return null;\n      case \"number\":\n        return 0;\n      case \"object\":\n        return {};\n      default:\n        // We don't have a datatype for some reason (perhaps additionalProperties was true)\n        return \"New Value\";\n    }\n  }\n\n  /** Handles the adding of a new additional property on the given `schema`. Calls the `onChange` callback once the new\n   * default data for that field has been added to the formData.\n   *\n   * @param schema - The schema element to which the new property is being added\n   */\n  handleAddClick = (schema: S) => () => {\n    if (!schema.additionalProperties) {\n      return;\n    }\n    const { formData, onChange, registry } = this.props;\n    const newFormData = { ...formData } as T;\n\n    let type: RJSFSchema[\"type\"] = undefined;\n    if (isObject(schema.additionalProperties)) {\n      type = schema.additionalProperties.type;\n      let apSchema = schema.additionalProperties;\n      if (REF_KEY in apSchema) {\n        const { schemaUtils } = registry;\n        apSchema = schemaUtils.retrieveSchema(\n          { $ref: apSchema[REF_KEY] } as S,\n          formData\n        );\n        type = apSchema.type;\n      }\n      if (!type && (ANY_OF_KEY in apSchema || ONE_OF_KEY in apSchema)) {\n        type = \"object\";\n      }\n    }\n\n    const newKey = this.getAvailableKey(\"newKey\", newFormData);\n    // Cast this to make the `set` work properly\n    set(newFormData as GenericObjectType, newKey, this.getDefaultValue(type));\n\n    onChange(newFormData);\n  };\n\n  /** Renders the `ObjectField` from the given props\n   */\n  render() {\n    const {\n      schema: rawSchema,\n      uiSchema = {},\n      formData,\n      errorSchema,\n      idSchema,\n      name,\n      required = false,\n      disabled = false,\n      readonly = false,\n      hideError,\n      idPrefix,\n      idSeparator,\n      onBlur,\n      onFocus,\n      registry,\n    } = this.props;\n\n    const { fields, formContext, schemaUtils } = registry;\n    const { SchemaField } = fields;\n    const schema: S = schemaUtils.retrieveSchema(rawSchema, formData);\n    const uiOptions = getUiOptions<T, S, F>(uiSchema);\n    const { properties: schemaProperties = {} } = schema;\n\n    const title = schema.title === undefined ? name : schema.title;\n    const description = uiOptions.description || schema.description;\n    let orderedProperties: string[];\n    try {\n      const properties = Object.keys(schemaProperties);\n      orderedProperties = orderProperties(properties, uiOptions.order);\n    } catch (err) {\n      return (\n        <div>\n          <p className=\"config-error\" style={{ color: \"red\" }}>\n            Invalid {name || \"root\"} object field configuration:\n            <em>{(err as Error).message}</em>.\n          </p>\n          <pre>{JSON.stringify(schema)}</pre>\n        </div>\n      );\n    }\n\n    const Template = getTemplate<\"ObjectFieldTemplate\", T, S, F>(\n      \"ObjectFieldTemplate\",\n      registry,\n      uiOptions\n    );\n\n    const templateProps = {\n      title: uiOptions.title || title,\n      description,\n      properties: orderedProperties.map((name) => {\n        const addedByAdditionalProperties = has(schema, [\n          PROPERTIES_KEY,\n          name,\n          ADDITIONAL_PROPERTY_FLAG,\n        ]);\n        const fieldUiSchema = addedByAdditionalProperties\n          ? uiSchema.additionalProperties\n          : uiSchema[name];\n        const hidden = getUiOptions<T, S, F>(fieldUiSchema).widget === \"hidden\";\n        const fieldIdSchema: IdSchema<T> = get(idSchema, [name], {});\n\n        return {\n          content: (\n            <SchemaField\n              key={name}\n              name={name}\n              required={this.isRequired(name)}\n              schema={get(schema, [PROPERTIES_KEY, name], {})}\n              uiSchema={fieldUiSchema}\n              errorSchema={get(errorSchema, name)}\n              idSchema={fieldIdSchema}\n              idPrefix={idPrefix}\n              idSeparator={idSeparator}\n              formData={get(formData, name)}\n              formContext={formContext}\n              wasPropertyKeyModified={this.state.wasPropertyKeyModified}\n              onKeyChange={this.onKeyChange(name)}\n              onChange={this.onPropertyChange(\n                name,\n                addedByAdditionalProperties\n              )}\n              onBlur={onBlur}\n              onFocus={onFocus}\n              registry={registry}\n              disabled={disabled}\n              readonly={readonly}\n              hideError={hideError}\n              onDropPropertyClick={this.onDropPropertyClick}\n            />\n          ),\n          name,\n          readonly,\n          disabled,\n          required,\n          hidden,\n        };\n      }),\n      readonly,\n      disabled,\n      required,\n      idSchema,\n      uiSchema,\n      schema,\n      formData,\n      formContext,\n      registry,\n    };\n    return <Template {...templateProps} onAddClick={this.handleAddClick} />;\n  }\n}\n\nexport default ObjectField;\n","import React from \"react\";\nimport {\n  mergeObjects,\n  deepEquals,\n  descriptionId,\n  getUiOptions,\n  getSchemaType,\n  getTemplate,\n  ErrorSchema,\n  FieldProps,\n  FieldTemplateProps,\n  FormContextType,\n  IdSchema,\n  Registry,\n  RJSFSchema,\n  StrictRJSFSchema,\n  UIOptionsType,\n  ID_KEY,\n  ADDITIONAL_PROPERTY_FLAG,\n  UI_OPTIONS_KEY,\n} from \"@rjsf/utils\";\nimport isObject from \"lodash/isObject\";\nimport omit from \"lodash/omit\";\n\n/** The map of component type to FieldName */\nconst COMPONENT_TYPES: { [key: string]: string } = {\n  array: \"ArrayField\",\n  boolean: \"BooleanField\",\n  integer: \"NumberField\",\n  number: \"NumberField\",\n  object: \"ObjectField\",\n  string: \"StringField\",\n  null: \"NullField\",\n};\n\n/** Computes and returns which `Field` implementation to return in order to render the field represented by the\n * `schema`. The `uiOptions` are used to alter what potential `Field` implementation is actually returned. If no\n * appropriate `Field` implementation can be found then a wrapper around `UnsupportedFieldTemplate` is used.\n *\n * @param schema - The schema from which to obtain the type\n * @param uiOptions - The UI Options that may affect the component decision\n * @param idSchema - The id that is passed to the `UnsupportedFieldTemplate`\n * @param registry - The registry from which fields and templates are obtained\n * @returns - The `Field` component that is used to render the actual field data\n */\nfunction getFieldComponent<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(\n  schema: S,\n  uiOptions: UIOptionsType<T, S, F>,\n  idSchema: IdSchema<T>,\n  registry: Registry<T, S, F>\n) {\n  const field = uiOptions.field;\n  const { fields } = registry;\n  if (typeof field === \"function\") {\n    return field;\n  }\n  if (typeof field === \"string\" && field in fields) {\n    return fields[field];\n  }\n\n  const schemaType = getSchemaType(schema);\n  const type: string = Array.isArray(schemaType)\n    ? schemaType[0]\n    : schemaType || \"\";\n  const componentName = COMPONENT_TYPES[type];\n\n  // If the type is not defined and the schema uses 'anyOf' or 'oneOf', don't\n  // render a field and let the MultiSchemaField component handle the form display\n  if (!componentName && (schema.anyOf || schema.oneOf)) {\n    return () => null;\n  }\n\n  return componentName in fields\n    ? fields[componentName]\n    : () => {\n        const UnsupportedFieldTemplate = getTemplate<\n          \"UnsupportedFieldTemplate\",\n          T,\n          S,\n          F\n        >(\"UnsupportedFieldTemplate\", registry, uiOptions);\n\n        return (\n          <UnsupportedFieldTemplate\n            schema={schema}\n            idSchema={idSchema}\n            reason={`Unknown field type ${schema.type}`}\n            registry={registry}\n          />\n        );\n      };\n}\n\n/** The `SchemaFieldRender` component is the work-horse of react-jsonschema-form, determining what kind of real field to\n * render based on the `schema`, `uiSchema` and all the other props. It also deals with rendering the `anyOf` and\n * `oneOf` fields.\n *\n * @param props - The `FieldProps` for this component\n */\nfunction SchemaFieldRender<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: FieldProps<T, S, F>) {\n  const {\n    schema: _schema,\n    idSchema: _idSchema,\n    uiSchema,\n    formData,\n    errorSchema,\n    idPrefix,\n    idSeparator,\n    name,\n    onChange,\n    onKeyChange,\n    onDropPropertyClick,\n    required,\n    registry,\n    wasPropertyKeyModified = false,\n  } = props;\n  const { formContext, schemaUtils } = registry;\n  const uiOptions = getUiOptions<T, S, F>(uiSchema);\n  const FieldTemplate = getTemplate<\"FieldTemplate\", T, S, F>(\n    \"FieldTemplate\",\n    registry,\n    uiOptions\n  );\n  const DescriptionFieldTemplate = getTemplate<\n    \"DescriptionFieldTemplate\",\n    T,\n    S,\n    F\n  >(\"DescriptionFieldTemplate\", registry, uiOptions);\n  const FieldHelpTemplate = getTemplate<\"FieldHelpTemplate\", T, S, F>(\n    \"FieldHelpTemplate\",\n    registry,\n    uiOptions\n  );\n  const FieldErrorTemplate = getTemplate<\"FieldErrorTemplate\", T, S, F>(\n    \"FieldErrorTemplate\",\n    registry,\n    uiOptions\n  );\n  const schema = schemaUtils.retrieveSchema(_schema, formData);\n  const fieldId = _idSchema[ID_KEY];\n  const idSchema = mergeObjects(\n    schemaUtils.toIdSchema(schema, fieldId, formData, idPrefix, idSeparator),\n    _idSchema\n  ) as IdSchema<T>;\n\n  /** Intermediary `onChange` handler for field components that will inject the `id` of the current field into the\n   * `onChange` chain if it is not already being provided from a deeper level in the hierarchy\n   */\n  const handleFieldComponentChange = React.useCallback(\n    (formData: T | undefined, newErrorSchema?: ErrorSchema<T>, id?: string) => {\n      const theId = id || fieldId;\n      return onChange(formData, newErrorSchema, theId);\n    },\n    [fieldId, onChange]\n  );\n\n  const FieldComponent = getFieldComponent<T, S, F>(\n    schema,\n    uiOptions,\n    idSchema,\n    registry\n  );\n  const disabled = Boolean(props.disabled || uiOptions.disabled);\n  const readonly = Boolean(\n    props.readonly ||\n      uiOptions.readonly ||\n      props.schema.readOnly ||\n      schema.readOnly\n  );\n  const uiSchemaHideError = uiOptions.hideError;\n  // Set hideError to the value provided in the uiSchema, otherwise stick with the prop to propagate to children\n  const hideError =\n    uiSchemaHideError === undefined\n      ? props.hideError\n      : Boolean(uiSchemaHideError);\n  const autofocus = Boolean(props.autofocus || uiOptions.autofocus);\n  if (Object.keys(schema).length === 0) {\n    return null;\n  }\n\n  const displayLabel = schemaUtils.getDisplayLabel(schema, uiSchema);\n\n  const { __errors, ...fieldErrorSchema } = errorSchema || {};\n  // See #439: uiSchema: Don't pass consumed class names or style to child components\n  const fieldUiSchema = omit(uiSchema, [\n    \"ui:classNames\",\n    \"classNames\",\n    \"ui:style\",\n  ]);\n  if (UI_OPTIONS_KEY in fieldUiSchema) {\n    fieldUiSchema[UI_OPTIONS_KEY] = omit(fieldUiSchema[UI_OPTIONS_KEY], [\n      \"classNames\",\n      \"style\",\n    ]);\n  }\n\n  const field = (\n    <FieldComponent\n      {...props}\n      onChange={handleFieldComponentChange}\n      idSchema={idSchema}\n      schema={schema}\n      uiSchema={fieldUiSchema}\n      disabled={disabled}\n      readonly={readonly}\n      hideError={hideError}\n      autofocus={autofocus}\n      errorSchema={fieldErrorSchema}\n      formContext={formContext}\n      rawErrors={__errors}\n    />\n  );\n\n  const id = idSchema[ID_KEY];\n\n  // If this schema has a title defined, but the user has set a new key/label, retain their input.\n  let label;\n  if (wasPropertyKeyModified) {\n    label = name;\n  } else {\n    label =\n      ADDITIONAL_PROPERTY_FLAG in schema\n        ? name\n        : uiOptions.title || props.schema.title || schema.title || name;\n  }\n\n  const description =\n    uiOptions.description ||\n    props.schema.description ||\n    schema.description ||\n    \"\";\n  const help = uiOptions.help;\n  const hidden = uiOptions.widget === \"hidden\";\n\n  const classNames = [\"form-group\", \"field\", `field-${schema.type}`];\n  if (!hideError && __errors && __errors.length > 0) {\n    classNames.push(\"field-error has-error has-danger\");\n  }\n  if (uiSchema?.classNames) {\n    if (process.env.NODE_ENV !== \"production\") {\n      console.warn(\n        \"'uiSchema.classNames' is deprecated and may be removed in a major release; Use 'ui:classNames' instead.\"\n      );\n    }\n    classNames.push(uiSchema.classNames);\n  }\n  if (uiOptions.classNames) {\n    classNames.push(uiOptions.classNames);\n  }\n\n  const helpComponent = (\n    <FieldHelpTemplate\n      help={help}\n      idSchema={idSchema}\n      schema={schema}\n      uiSchema={uiSchema}\n      hasErrors={!hideError && __errors && __errors.length > 0}\n      registry={registry}\n    />\n  );\n  const errorsComponent = hideError ? undefined : (\n    <FieldErrorTemplate\n      errors={__errors}\n      errorSchema={errorSchema}\n      idSchema={idSchema}\n      schema={schema}\n      uiSchema={uiSchema}\n      registry={registry}\n    />\n  );\n  const fieldProps: Omit<FieldTemplateProps<T, S, F>, \"children\"> = {\n    description: (\n      <DescriptionFieldTemplate\n        id={descriptionId<T>(id)}\n        description={description}\n        schema={schema}\n        uiSchema={uiSchema}\n        registry={registry}\n      />\n    ),\n    rawDescription: description,\n    help: helpComponent,\n    rawHelp: typeof help === \"string\" ? help : undefined,\n    errors: errorsComponent,\n    rawErrors: hideError ? undefined : __errors,\n    id,\n    label,\n    hidden,\n    onChange,\n    onKeyChange,\n    onDropPropertyClick,\n    required,\n    disabled,\n    readonly,\n    hideError,\n    displayLabel,\n    classNames: classNames.join(\" \").trim(),\n    style: uiOptions.style,\n    formContext,\n    formData,\n    schema,\n    uiSchema,\n    registry,\n  };\n\n  const _AnyOfField = registry.fields.AnyOfField;\n  const _OneOfField = registry.fields.OneOfField;\n  const isReplacingAnyOrOneOf =\n    uiSchema?.[\"ui:field\"] && uiSchema?.[\"ui:fieldReplacesAnyOrOneOf\"] === true;\n\n  return (\n    <FieldTemplate {...fieldProps}>\n      <>\n        {field}\n        {/*\n        If the schema `anyOf` or 'oneOf' can be rendered as a select control, don't\n        render the selection and let `StringField` component handle\n        rendering\n      */}\n        {schema.anyOf &&\n          !isReplacingAnyOrOneOf &&\n          !schemaUtils.isSelect(schema) && (\n            <_AnyOfField\n              name={name}\n              disabled={disabled}\n              readonly={readonly}\n              hideError={hideError}\n              errorSchema={errorSchema}\n              formData={formData}\n              formContext={formContext}\n              idPrefix={idPrefix}\n              idSchema={idSchema}\n              idSeparator={idSeparator}\n              onBlur={props.onBlur}\n              onChange={props.onChange}\n              onFocus={props.onFocus}\n              options={schema.anyOf.map((_schema) =>\n                schemaUtils.retrieveSchema(\n                  isObject(_schema) ? (_schema as S) : ({} as S),\n                  formData\n                )\n              )}\n              baseType={schema.type}\n              registry={registry}\n              schema={schema}\n              uiSchema={uiSchema}\n            />\n          )}\n        {schema.oneOf &&\n          !isReplacingAnyOrOneOf &&\n          !schemaUtils.isSelect(schema) && (\n            <_OneOfField\n              name={name}\n              disabled={disabled}\n              readonly={readonly}\n              hideError={hideError}\n              errorSchema={errorSchema}\n              formData={formData}\n              formContext={formContext}\n              idPrefix={idPrefix}\n              idSchema={idSchema}\n              idSeparator={idSeparator}\n              onBlur={props.onBlur}\n              onChange={props.onChange}\n              onFocus={props.onFocus}\n              options={schema.oneOf.map((_schema) =>\n                schemaUtils.retrieveSchema(\n                  isObject(_schema) ? (_schema as S) : ({} as S),\n                  formData\n                )\n              )}\n              baseType={schema.type}\n              registry={registry}\n              schema={schema}\n              uiSchema={uiSchema}\n            />\n          )}\n      </>\n    </FieldTemplate>\n  );\n}\n\n/** The `SchemaField` component determines whether it is necessary to rerender the component based on any props changes\n * and if so, calls the `SchemaFieldRender` component with the props.\n */\nclass SchemaField<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n> extends React.Component<FieldProps<T, S, F>> {\n  shouldComponentUpdate(nextProps: Readonly<FieldProps<T, S, F>>) {\n    return !deepEquals(this.props, nextProps);\n  }\n\n  render() {\n    return <SchemaFieldRender<T, S, F> {...this.props} />;\n  }\n}\n\nexport default SchemaField;\n","import React from \"react\";\nimport {\n  getWidget,\n  getUiOptions,\n  optionsList,\n  hasWidget,\n  FieldProps,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from \"@rjsf/utils\";\n\n/** The `StringField` component is used to render a schema field that represents a string type\n *\n * @param props - The `FieldProps` for this template\n */\nfunction StringField<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: FieldProps<T, S, F>) {\n  const {\n    schema,\n    name,\n    uiSchema,\n    idSchema,\n    formData,\n    required,\n    disabled = false,\n    readonly = false,\n    autofocus = false,\n    onChange,\n    onBlur,\n    onFocus,\n    registry,\n    rawErrors,\n  } = props;\n  const { title, format } = schema;\n  const { widgets, formContext, schemaUtils } = registry;\n  const enumOptions = schemaUtils.isSelect(schema)\n    ? optionsList(schema)\n    : undefined;\n  let defaultWidget = enumOptions ? \"select\" : \"text\";\n  if (format && hasWidget<T, S, F>(schema, format, widgets)) {\n    defaultWidget = format;\n  }\n  const {\n    widget = defaultWidget,\n    placeholder = \"\",\n    ...options\n  } = getUiOptions<T, S, F>(uiSchema);\n  const Widget = getWidget<T, S, F>(schema, widget, widgets);\n  return (\n    <Widget\n      options={{ ...options, enumOptions }}\n      schema={schema}\n      uiSchema={uiSchema}\n      id={idSchema.$id}\n      label={title === undefined ? name : title}\n      value={formData}\n      onChange={onChange}\n      onBlur={onBlur}\n      onFocus={onFocus}\n      required={required}\n      disabled={disabled}\n      readonly={readonly}\n      formContext={formContext}\n      autofocus={autofocus}\n      registry={registry}\n      placeholder={placeholder}\n      rawErrors={rawErrors}\n    />\n  );\n}\n\nexport default StringField;\n","import { useEffect } from \"react\";\nimport {\n  FieldProps,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from \"@rjsf/utils\";\n\n/** The `NullField` component is used to render a field in the schema is null. It also ensures that the `formData` is\n * also set to null if it has no value.\n *\n * @param props - The `FieldProps` for this template\n */\nfunction NullField<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: FieldProps<T, S, F>) {\n  const { formData, onChange } = props;\n  useEffect(() => {\n    if (formData === undefined) {\n      onChange(null as unknown as T);\n    }\n  }, [formData, onChange]);\n\n  return null;\n}\n\nexport default NullField;\n","import {\n  Field,\n  FormContextType,\n  RegistryFieldsType,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from \"@rjsf/utils\";\n\nimport ArrayField from \"./ArrayField\";\nimport BooleanField from \"./BooleanField\";\nimport MultiSchemaField from \"./MultiSchemaField\";\nimport NumberField from \"./NumberField\";\nimport ObjectField from \"./ObjectField\";\nimport SchemaField from \"./SchemaField\";\nimport StringField from \"./StringField\";\nimport NullField from \"./NullField\";\n\nfunction fields<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(): RegistryFieldsType<T, S, F> {\n  return {\n    AnyOfField: MultiSchemaField,\n    ArrayField: ArrayField as unknown as Field<T, S, F>,\n    // ArrayField falls back to SchemaField if ArraySchemaField is not defined, which it isn't by default\n    BooleanField,\n    NumberField,\n    ObjectField,\n    OneOfField: MultiSchemaField,\n    SchemaField,\n    StringField,\n    NullField,\n  };\n}\n\nexport default fields;\n","import React from \"react\";\nimport {\n  descriptionId,\n  getTemplate,\n  getUiOptions,\n  ArrayFieldDescriptionProps,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from \"@rjsf/utils\";\n\n/** The `ArrayFieldDescriptionTemplate` component renders a `DescriptionFieldTemplate` with an `id` derived from\n * the `idSchema`.\n *\n * @param props - The `ArrayFieldDescriptionProps` for the component\n */\nexport default function ArrayFieldDescriptionTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: ArrayFieldDescriptionProps<T, S, F>) {\n  const { idSchema, description, registry, schema, uiSchema } = props;\n  const options = getUiOptions<T, S, F>(uiSchema);\n  const { label: displayLabel = true } = options;\n  if (!description || !displayLabel) {\n    return null;\n  }\n  const DescriptionFieldTemplate = getTemplate<\n    \"DescriptionFieldTemplate\",\n    T,\n    S,\n    F\n  >(\"DescriptionFieldTemplate\", registry, options);\n  return (\n    <DescriptionFieldTemplate\n      id={descriptionId<T>(idSchema)}\n      description={description}\n      schema={schema}\n      uiSchema={uiSchema}\n      registry={registry}\n    />\n  );\n}\n","import React, { CSSProperties } from \"react\";\nimport {\n  ArrayFieldTemplateItemType,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from \"@rjsf/utils\";\n\n/** The `ArrayFieldItemTemplate` component is the template used to render an items of an array.\n *\n * @param props - The `ArrayFieldTemplateItemType` props for the component\n */\nexport default function ArrayFieldItemTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: ArrayFieldTemplateItemType<T, S, F>) {\n  const {\n    children,\n    className,\n    disabled,\n    hasToolbar,\n    hasMoveDown,\n    hasMoveUp,\n    hasRemove,\n    index,\n    onDropIndexClick,\n    onReorderClick,\n    readonly,\n    registry,\n    uiSchema,\n  } = props;\n  const { MoveDownButton, MoveUpButton, RemoveButton } =\n    registry.templates.ButtonTemplates;\n  const btnStyle: CSSProperties = {\n    flex: 1,\n    paddingLeft: 6,\n    paddingRight: 6,\n    fontWeight: \"bold\",\n  };\n  return (\n    <div className={className}>\n      <div className={hasToolbar ? \"col-xs-9\" : \"col-xs-12\"}>{children}</div>\n      {hasToolbar && (\n        <div className=\"col-xs-3 array-item-toolbox\">\n          <div\n            className=\"btn-group\"\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-around\",\n            }}\n          >\n            {(hasMoveUp || hasMoveDown) && (\n              <MoveUpButton\n                style={btnStyle}\n                disabled={disabled || readonly || !hasMoveUp}\n                onClick={onReorderClick(index, index - 1)}\n                uiSchema={uiSchema}\n                registry={registry}\n              />\n            )}\n            {(hasMoveUp || hasMoveDown) && (\n              <MoveDownButton\n                style={btnStyle}\n                disabled={disabled || readonly || !hasMoveDown}\n                onClick={onReorderClick(index, index + 1)}\n                uiSchema={uiSchema}\n                registry={registry}\n              />\n            )}\n            {hasRemove && (\n              <RemoveButton\n                style={btnStyle}\n                disabled={disabled || readonly}\n                onClick={onDropIndexClick(index)}\n                uiSchema={uiSchema}\n                registry={registry}\n              />\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport {\n  getTemplate,\n  getUiOptions,\n  ArrayFieldTemplateProps,\n  ArrayFieldTemplateItemType,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from \"@rjsf/utils\";\n\n/** The `ArrayFieldTemplate` component is the template used to render all items in an array.\n *\n * @param props - The `ArrayFieldTemplateItemType` props for the component\n */\nexport default function ArrayFieldTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: ArrayFieldTemplateProps<T, S, F>) {\n  const {\n    canAdd,\n    className,\n    disabled,\n    idSchema,\n    uiSchema,\n    items,\n    onAddClick,\n    readonly,\n    registry,\n    required,\n    schema,\n    title,\n  } = props;\n  const uiOptions = getUiOptions<T, S, F>(uiSchema);\n  const ArrayFieldDescriptionTemplate = getTemplate<\n    \"ArrayFieldDescriptionTemplate\",\n    T,\n    S,\n    F\n  >(\"ArrayFieldDescriptionTemplate\", registry, uiOptions);\n  const ArrayFieldItemTemplate = getTemplate<\"ArrayFieldItemTemplate\", T, S, F>(\n    \"ArrayFieldItemTemplate\",\n    registry,\n    uiOptions\n  );\n  const ArrayFieldTitleTemplate = getTemplate<\n    \"ArrayFieldTitleTemplate\",\n    T,\n    S,\n    F\n  >(\"ArrayFieldTitleTemplate\", registry, uiOptions);\n  // Button templates are not overridden in the uiSchema\n  const {\n    ButtonTemplates: { AddButton },\n  } = registry.templates;\n  return (\n    <fieldset className={className} id={idSchema.$id}>\n      <ArrayFieldTitleTemplate\n        idSchema={idSchema}\n        title={uiOptions.title || title}\n        required={required}\n        schema={schema}\n        uiSchema={uiSchema}\n        registry={registry}\n      />\n      <ArrayFieldDescriptionTemplate\n        idSchema={idSchema}\n        description={uiOptions.description || schema.description}\n        schema={schema}\n        uiSchema={uiSchema}\n        registry={registry}\n      />\n      <div className=\"row array-item-list\">\n        {items &&\n          items.map(\n            ({ key, ...itemProps }: ArrayFieldTemplateItemType<T, S, F>) => (\n              <ArrayFieldItemTemplate key={key} {...itemProps} />\n            )\n          )}\n      </div>\n      {canAdd && (\n        <AddButton\n          className=\"array-item-add\"\n          onClick={onAddClick}\n          disabled={disabled || readonly}\n          uiSchema={uiSchema}\n          registry={registry}\n        />\n      )}\n    </fieldset>\n  );\n}\n","import React from \"react\";\nimport {\n  getTemplate,\n  getUiOptions,\n  titleId,\n  ArrayFieldTitleProps,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  TemplatesType,\n} from \"@rjsf/utils\";\n\n/** The `ArrayFieldTitleTemplate` component renders a `TitleFieldTemplate` with an `id` derived from\n * the `idSchema`.\n *\n * @param props - The `ArrayFieldTitleProps` for the component\n */\nexport default function ArrayFieldTitleTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: ArrayFieldTitleProps<T, S, F>) {\n  const { idSchema, title, schema, uiSchema, required, registry } = props;\n  const options = getUiOptions<T, S, F>(uiSchema);\n  const { label: displayLabel = true } = options;\n  if (!title || !displayLabel) {\n    return null;\n  }\n  const TitleFieldTemplate: TemplatesType<T, S, F>[\"TitleFieldTemplate\"] =\n    getTemplate<\"TitleFieldTemplate\", T, S, F>(\n      \"TitleFieldTemplate\",\n      registry,\n      options\n    );\n  return (\n    <TitleFieldTemplate\n      id={titleId<T>(idSchema)}\n      title={title}\n      required={required}\n      schema={schema}\n      uiSchema={uiSchema}\n      registry={registry}\n    />\n  );\n}\n","import React, { useCallback } from \"react\";\nimport {\n  ariaDescribedByIds,\n  examplesId,\n  getInputProps,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  WidgetProps,\n} from \"@rjsf/utils\";\n\n/** The `BaseInputTemplate` is the template to use to render the basic `<input>` component for the `core` theme.\n * It is used as the template for rendering many of the <input> based widgets that differ by `type` and callbacks only.\n * It can be customized/overridden for other themes or individual implementations as needed.\n *\n * @param props - The `WidgetProps` for this template\n */\nexport default function BaseInputTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: WidgetProps<T, S, F>) {\n  const {\n    id,\n    value,\n    readonly,\n    disabled,\n    autofocus,\n    onBlur,\n    onFocus,\n    onChange,\n    options,\n    schema,\n    uiSchema,\n    formContext,\n    registry,\n    rawErrors,\n    type,\n    ...rest\n  } = props;\n\n  // Note: since React 15.2.0 we can't forward unknown element attributes, so we\n  // exclude the \"options\" and \"schema\" ones here.\n  if (!id) {\n    console.log(\"No id for\", props);\n    throw new Error(`no id for props ${JSON.stringify(props)}`);\n  }\n  const inputProps = {\n    ...rest,\n    ...getInputProps<T, S, F>(schema, type, options),\n  };\n\n  let inputValue;\n  if (inputProps.type === \"number\" || inputProps.type === \"integer\") {\n    inputValue = value || value === 0 ? value : \"\";\n  } else {\n    inputValue = value == null ? \"\" : value;\n  }\n\n  const _onChange = useCallback(\n    ({ target: { value } }: React.ChangeEvent<HTMLInputElement>) =>\n      onChange(value === \"\" ? options.emptyValue : value),\n    [onChange, options]\n  );\n  const _onBlur = useCallback(\n    ({ target: { value } }: React.FocusEvent<HTMLInputElement>) =>\n      onBlur(id, value),\n    [onBlur, id]\n  );\n  const _onFocus = useCallback(\n    ({ target: { value } }: React.FocusEvent<HTMLInputElement>) =>\n      onFocus(id, value),\n    [onFocus, id]\n  );\n\n  return (\n    <>\n      <input\n        id={id}\n        name={id}\n        className=\"form-control\"\n        readOnly={readonly}\n        disabled={disabled}\n        autoFocus={autofocus}\n        value={inputValue}\n        {...inputProps}\n        list={schema.examples ? examplesId<T>(id) : undefined}\n        onChange={_onChange}\n        onBlur={_onBlur}\n        onFocus={_onFocus}\n        aria-describedby={ariaDescribedByIds<T>(id, !!schema.examples)}\n      />\n      {Array.isArray(schema.examples) && (\n        <datalist key={`datalist_${id}`} id={examplesId<T>(id)}>\n          {(schema.examples as string[])\n            .concat(\n              schema.default && !schema.examples.includes(schema.default)\n                ? ([schema.default] as string[])\n                : []\n            )\n            .map((example: any) => {\n              return <option key={example} value={example} />;\n            })}\n        </datalist>\n      )}\n    </>\n  );\n}\n","import React from \"react\";\nimport {\n  getSubmitButtonOptions,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  SubmitButtonProps,\n} from \"@rjsf/utils\";\n\n/** The `SubmitButton` renders a button that represent the `Submit` action on a form\n */\nexport default function SubmitButton<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>({ uiSchema }: SubmitButtonProps<T, S, F>) {\n  const {\n    submitText,\n    norender,\n    props: submitButtonProps = {},\n  } = getSubmitButtonOptions<T, S, F>(uiSchema);\n  if (norender) {\n    return null;\n  }\n  return (\n    <div>\n      <button\n        type=\"submit\"\n        {...submitButtonProps}\n        className={`btn btn-info ${submitButtonProps.className}`}\n      >\n        {submitText}\n      </button>\n    </div>\n  );\n}\n","import React from \"react\";\nimport {\n  FormContextType,\n  IconButtonProps,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from \"@rjsf/utils\";\n\nexport default function IconButton<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: IconButtonProps<T, S, F>) {\n  const {\n    iconType = \"default\",\n    icon,\n    className,\n    uiSchema,\n    registry,\n    ...otherProps\n  } = props;\n  return (\n    <button\n      type=\"button\"\n      className={`btn btn-${iconType} ${className}`}\n      {...otherProps}\n    >\n      <i className={`glyphicon glyphicon-${icon}`} />\n    </button>\n  );\n}\n\nexport function MoveDownButton<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: IconButtonProps<T, S, F>) {\n  return (\n    <IconButton\n      title=\"Move down\"\n      className=\"array-item-move-down\"\n      {...props}\n      icon=\"arrow-down\"\n    />\n  );\n}\n\nexport function MoveUpButton<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: IconButtonProps<T, S, F>) {\n  return (\n    <IconButton\n      title=\"Move up\"\n      className=\"array-item-move-up\"\n      {...props}\n      icon=\"arrow-up\"\n    />\n  );\n}\n\nexport function RemoveButton<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: IconButtonProps<T, S, F>) {\n  return (\n    <IconButton\n      title=\"Remove\"\n      className=\"array-item-remove\"\n      {...props}\n      iconType=\"danger\"\n      icon=\"remove\"\n    />\n  );\n}\n","import React from \"react\";\nimport {\n  FormContextType,\n  IconButtonProps,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from \"@rjsf/utils\";\n\nimport IconButton from \"./IconButton\";\n\n/** The `AddButton` renders a button that represent the `Add` action on a form\n */\nexport default function AddButton<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>({ className, onClick, disabled, registry }: IconButtonProps<T, S, F>) {\n  return (\n    <div className=\"row\">\n      <p className={`col-xs-3 col-xs-offset-9 text-right ${className}`}>\n        <IconButton\n          iconType=\"info\"\n          icon=\"plus\"\n          className=\"btn-add col-xs-12\"\n          title=\"Add\"\n          onClick={onClick}\n          disabled={disabled}\n          registry={registry}\n        />\n      </p>\n    </div>\n  );\n}\n","import {\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  TemplatesType,\n} from \"@rjsf/utils\";\n\nimport SubmitButton from \"./SubmitButton\";\nimport AddButton from \"./AddButton\";\nimport { RemoveButton, MoveDownButton, MoveUpButton } from \"./IconButton\";\n\nfunction buttonTemplates<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(): TemplatesType<T, S, F>[\"ButtonTemplates\"] {\n  return {\n    SubmitButton,\n    AddButton,\n    MoveDownButton,\n    MoveUpButton,\n    RemoveButton,\n  };\n}\n\nexport default buttonTemplates;\n","import React from \"react\";\nimport {\n  DescriptionFieldProps,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from \"@rjsf/utils\";\n\n/** The `DescriptionField` is the template to use to render the description of a field\n *\n * @param props - The `DescriptionFieldProps` for this component\n */\nexport default function DescriptionField<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: DescriptionFieldProps<T, S, F>) {\n  const { id, description } = props;\n  if (!description) {\n    return null;\n  }\n  if (typeof description === \"string\") {\n    return (\n      <p id={id} className=\"field-description\">\n        {description}\n      </p>\n    );\n  } else {\n    return (\n      <div id={id} className=\"field-description\">\n        {description}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport {\n  ErrorListProps,\n  FormContextType,\n  RJSFValidationError,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from \"@rjsf/utils\";\n\n/** The `ErrorList` component is the template that renders the all the errors associated with the fields in the `Form`\n *\n * @param props - The `ErrorListProps` for this component\n */\nexport default function ErrorList<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>({ errors }: ErrorListProps<T, S, F>) {\n  return (\n    <div className=\"panel panel-danger errors\">\n      <div className=\"panel-heading\">\n        <h3 className=\"panel-title\">Errors</h3>\n      </div>\n      <ul className=\"list-group\">\n        {errors.map((error: RJSFValidationError, i: number) => {\n          return (\n            <li key={i} className=\"list-group-item text-danger\">\n              {error.stack}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n","import React from \"react\";\n\nconst REQUIRED_FIELD_SYMBOL = \"*\";\n\nexport type LabelProps = {\n  /** The label for the field */\n  label?: string;\n  /** A boolean value stating if the field is required */\n  required?: boolean;\n  /** The id of the input field being labeled */\n  id?: string;\n};\n\n/** Renders a label for a field\n *\n * @param props - The `LabelProps` for this component\n */\nexport default function Label(props: LabelProps) {\n  const { label, required, id } = props;\n  if (!label) {\n    return null;\n  }\n  return (\n    <label className=\"control-label\" htmlFor={id}>\n      {label}\n      {required && <span className=\"required\">{REQUIRED_FIELD_SYMBOL}</span>}\n    </label>\n  );\n}\n","import React from \"react\";\nimport {\n  FieldTemplateProps,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  getTemplate,\n  getUiOptions,\n} from \"@rjsf/utils\";\n\nimport Label from \"./Label\";\n\n/** The `FieldTemplate` component is the template used by `SchemaField` to render any field. It renders the field\n * content, (label, description, children, errors and help) inside of a `WrapIfAdditional` component.\n *\n * @param props - The `FieldTemplateProps` for this component\n */\nexport default function FieldTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: FieldTemplateProps<T, S, F>) {\n  const {\n    id,\n    label,\n    children,\n    errors,\n    help,\n    description,\n    hidden,\n    required,\n    displayLabel,\n    registry,\n    uiSchema,\n  } = props;\n  const uiOptions = getUiOptions(uiSchema);\n  const WrapIfAdditionalTemplate = getTemplate<\n    \"WrapIfAdditionalTemplate\",\n    T,\n    S,\n    F\n  >(\"WrapIfAdditionalTemplate\", registry, uiOptions);\n  if (hidden) {\n    return <div className=\"hidden\">{children}</div>;\n  }\n  return (\n    <WrapIfAdditionalTemplate {...props}>\n      {displayLabel && <Label label={label} required={required} id={id} />}\n      {displayLabel && description ? description : null}\n      {children}\n      {errors}\n      {help}\n    </WrapIfAdditionalTemplate>\n  );\n}\n","import React from \"react\";\nimport {\n  errorId,\n  FieldErrorProps,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from \"@rjsf/utils\";\n\n/** The `FieldErrorTemplate` component renders the errors local to the particular field\n *\n * @param props - The `FieldErrorProps` for the errors being rendered\n */\nexport default function FieldErrorTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: FieldErrorProps<T, S, F>) {\n  const { errors = [], idSchema } = props;\n  if (errors.length === 0) {\n    return null;\n  }\n  const id = errorId<T>(idSchema);\n\n  return (\n    <div>\n      <ul id={id} className=\"error-detail bs-callout bs-callout-info\">\n        {errors\n          .filter((elem) => !!elem)\n          .map((error, index: number) => {\n            return (\n              <li className=\"text-danger\" key={index}>\n                {error}\n              </li>\n            );\n          })}\n      </ul>\n    </div>\n  );\n}\n","import React from \"react\";\nimport {\n  helpId,\n  FieldHelpProps,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from \"@rjsf/utils\";\n\n/** The `FieldHelpTemplate` component renders any help desired for a field\n *\n * @param props - The `FieldHelpProps` to be rendered\n */\nexport default function FieldHelpTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: FieldHelpProps<T, S, F>) {\n  const { idSchema, help } = props;\n  if (!help) {\n    return null;\n  }\n  const id = helpId<T>(idSchema);\n  if (typeof help === \"string\") {\n    return (\n      <p id={id} className=\"help-block\">\n        {help}\n      </p>\n    );\n  }\n  return (\n    <div id={id} className=\"help-block\">\n      {help}\n    </div>\n  );\n}\n","import React from \"react\";\nimport {\n  FormContextType,\n  ObjectFieldTemplatePropertyType,\n  ObjectFieldTemplateProps,\n  RJSFSchema,\n  StrictRJSFSchema,\n  canExpand,\n  descriptionId,\n  getTemplate,\n  getUiOptions,\n  titleId,\n} from \"@rjsf/utils\";\n\n/** The `ObjectFieldTemplate` is the template to use to render all the inner properties of an object along with the\n * title and description if available. If the object is expandable, then an `AddButton` is also rendered after all\n * the properties.\n *\n * @param props - The `ObjectFieldTemplateProps` for this component\n */\nexport default function ObjectFieldTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: ObjectFieldTemplateProps<T, S, F>) {\n  const {\n    description,\n    disabled,\n    formData,\n    idSchema,\n    onAddClick,\n    properties,\n    readonly,\n    registry,\n    required,\n    schema,\n    title,\n    uiSchema,\n  } = props;\n  const options = getUiOptions<T, S, F>(uiSchema);\n  const TitleFieldTemplate = getTemplate<\"TitleFieldTemplate\", T, S, F>(\n    \"TitleFieldTemplate\",\n    registry,\n    options\n  );\n  const DescriptionFieldTemplate = getTemplate<\n    \"DescriptionFieldTemplate\",\n    T,\n    S,\n    F\n  >(\"DescriptionFieldTemplate\", registry, options);\n  // Button templates are not overridden in the uiSchema\n  const {\n    ButtonTemplates: { AddButton },\n  } = registry.templates;\n  return (\n    <fieldset id={idSchema.$id}>\n      {(options.title || title) && (\n        <TitleFieldTemplate\n          id={titleId<T>(idSchema)}\n          title={options.title || title}\n          required={required}\n          schema={schema}\n          uiSchema={uiSchema}\n          registry={registry}\n        />\n      )}\n      {(options.description || description) && (\n        <DescriptionFieldTemplate\n          id={descriptionId<T>(idSchema)}\n          description={options.description || description!}\n          schema={schema}\n          uiSchema={uiSchema}\n          registry={registry}\n        />\n      )}\n      {properties.map((prop: ObjectFieldTemplatePropertyType) => prop.content)}\n      {canExpand<T, S, F>(schema, uiSchema, formData) && (\n        <AddButton\n          className=\"object-property-expand\"\n          onClick={onAddClick(schema)}\n          disabled={disabled || readonly}\n          uiSchema={uiSchema}\n          registry={registry}\n        />\n      )}\n    </fieldset>\n  );\n}\n","import React from \"react\";\nimport {\n  FormContextType,\n  TitleFieldProps,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from \"@rjsf/utils\";\n\nconst REQUIRED_FIELD_SYMBOL = \"*\";\n\n/** The `TitleField` is the template to use to render the title of a field\n *\n * @param props - The `TitleFieldProps` for this component\n */\nexport default function TitleField<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: TitleFieldProps<T, S, F>) {\n  const { id, title, required } = props;\n  return (\n    <legend id={id}>\n      {title}\n      {required && <span className=\"required\">{REQUIRED_FIELD_SYMBOL}</span>}\n    </legend>\n  );\n}\n","import React from \"react\";\nimport {\n  FormContextType,\n  UnsupportedFieldProps,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from \"@rjsf/utils\";\n\n/** The `UnsupportedField` component is used to render a field in the schema is one that is not supported by\n * react-jsonschema-form.\n *\n * @param props - The `FieldProps` for this template\n */\nfunction UnsupportedField<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: UnsupportedFieldProps<T, S, F>) {\n  const { schema, idSchema, reason } = props;\n  return (\n    <div className=\"unsupported-field\">\n      <p>\n        Unsupported field schema\n        {idSchema && idSchema.$id && (\n          <span>\n            {\" for\"} field <code>{idSchema.$id}</code>\n          </span>\n        )}\n        {reason && <em>: {reason}</em>}.\n      </p>\n      {schema && <pre>{JSON.stringify(schema, null, 2)}</pre>}\n    </div>\n  );\n}\n\nexport default UnsupportedField;\n","import React from \"react\";\nimport {\n  ADDITIONAL_PROPERTY_FLAG,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  WrapIfAdditionalTemplateProps,\n} from \"@rjsf/utils\";\n\nimport Label from \"./FieldTemplate/Label\";\n\n/** The `WrapIfAdditional` component is used by the `FieldTemplate` to rename, or remove properties that are\n * part of an `additionalProperties` part of a schema.\n *\n * @param props - The `WrapIfAdditionalProps` for this component\n */\nexport default function WrapIfAdditionalTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: WrapIfAdditionalTemplateProps<T, S, F>) {\n  const {\n    id,\n    classNames,\n    style,\n    disabled,\n    label,\n    onKeyChange,\n    onDropPropertyClick,\n    readonly,\n    required,\n    schema,\n    children,\n    uiSchema,\n    registry,\n  } = props;\n  // Button templates are not overridden in the uiSchema\n  const { RemoveButton } = registry.templates.ButtonTemplates;\n  const keyLabel = `${label} Key`; // i18n ?\n  const additional = ADDITIONAL_PROPERTY_FLAG in schema;\n\n  if (!additional) {\n    return (\n      <div className={classNames} style={style}>\n        {children}\n      </div>\n    );\n  }\n\n  return (\n    <div className={classNames} style={style}>\n      <div className=\"row\">\n        <div className=\"col-xs-5 form-additional\">\n          <div className=\"form-group\">\n            <Label label={keyLabel} required={required} id={`${id}-key`} />\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              id={`${id}-key`}\n              onBlur={(event) => onKeyChange(event.target.value)}\n              defaultValue={label}\n            />\n          </div>\n        </div>\n        <div className=\"form-additional form-group col-xs-5\">{children}</div>\n        <div className=\"col-xs-2\">\n          <RemoveButton\n            className=\"array-item-remove btn-block\"\n            style={{ border: \"0\" }}\n            disabled={disabled || readonly}\n            onClick={onDropPropertyClick(label)}\n            uiSchema={uiSchema}\n            registry={registry}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n","import {\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  TemplatesType,\n} from \"@rjsf/utils\";\n\nimport ArrayFieldDescriptionTemplate from \"./ArrayFieldDescriptionTemplate\";\nimport ArrayFieldItemTemplate from \"./ArrayFieldItemTemplate\";\nimport ArrayFieldTemplate from \"./ArrayFieldTemplate\";\nimport ArrayFieldTitleTemplate from \"./ArrayFieldTitleTemplate\";\nimport BaseInputTemplate from \"./BaseInputTemplate\";\nimport ButtonTemplates from \"./ButtonTemplates\";\nimport DescriptionField from \"./DescriptionField\";\nimport ErrorList from \"./ErrorList\";\nimport FieldTemplate from \"./FieldTemplate\";\nimport FieldErrorTemplate from \"./FieldErrorTemplate\";\nimport FieldHelpTemplate from \"./FieldHelpTemplate\";\nimport ObjectFieldTemplate from \"./ObjectFieldTemplate\";\nimport TitleField from \"./TitleField\";\nimport UnsupportedField from \"./UnsupportedField\";\nimport WrapIfAdditionalTemplate from \"./WrapIfAdditionalTemplate\";\n\nfunction templates<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(): TemplatesType<T, S, F> {\n  return {\n    ArrayFieldDescriptionTemplate,\n    ArrayFieldItemTemplate,\n    ArrayFieldTemplate,\n    ArrayFieldTitleTemplate,\n    ButtonTemplates: ButtonTemplates<T, S, F>(),\n    BaseInputTemplate,\n    DescriptionFieldTemplate: DescriptionField,\n    ErrorListTemplate: ErrorList,\n    FieldTemplate,\n    FieldErrorTemplate,\n    FieldHelpTemplate,\n    ObjectFieldTemplate,\n    TitleFieldTemplate: TitleField,\n    UnsupportedFieldTemplate: UnsupportedField,\n    WrapIfAdditionalTemplate,\n  };\n}\n\nexport default templates;\n","import React, { MouseEvent, useCallback, useEffect, useReducer } from \"react\";\nimport {\n  ariaDescribedByIds,\n  parseDateString,\n  toDateString,\n  pad,\n  DateObject,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  WidgetProps,\n} from \"@rjsf/utils\";\n\nfunction rangeOptions(start: number, stop: number) {\n  const options = [];\n  for (let i = start; i <= stop; i++) {\n    options.push({ value: i, label: pad(i, 2) });\n  }\n  return options;\n}\n\nfunction readyForChange(state: DateObject) {\n  return Object.values(state).every((value) => value !== -1);\n}\n\nfunction dateElementProps(\n  state: DateObject,\n  time: boolean,\n  yearsRange: [number, number] = [1900, new Date().getFullYear() + 2]\n) {\n  const { year, month, day, hour, minute, second } = state;\n  const data = [\n    {\n      type: \"year\",\n      range: yearsRange,\n      value: year,\n    },\n    { type: \"month\", range: [1, 12], value: month },\n    { type: \"day\", range: [1, 31], value: day },\n  ] as { type: string; range: [number, number]; value: number | undefined }[];\n  if (time) {\n    data.push(\n      { type: \"hour\", range: [0, 23], value: hour },\n      { type: \"minute\", range: [0, 59], value: minute },\n      { type: \"second\", range: [0, 59], value: second }\n    );\n  }\n  return data;\n}\n\ntype DateElementProps<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n> = Pick<\n  WidgetProps<T, S, F>,\n  | \"value\"\n  | \"disabled\"\n  | \"readonly\"\n  | \"autofocus\"\n  | \"registry\"\n  | \"onBlur\"\n  | \"onFocus\"\n> & {\n  rootId: string;\n  select: (property: keyof DateObject, value: any) => void;\n  type: string;\n  range: [number, number];\n};\n\nfunction DateElement<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>({\n  type,\n  range,\n  value,\n  select,\n  rootId,\n  disabled,\n  readonly,\n  autofocus,\n  registry,\n  onBlur,\n  onFocus,\n}: DateElementProps<T, S, F>) {\n  const id = rootId + \"_\" + type;\n  const { SelectWidget } = registry.widgets;\n  return (\n    <SelectWidget\n      schema={{ type: \"integer\" } as S}\n      id={id}\n      className=\"form-control\"\n      options={{ enumOptions: rangeOptions(range[0], range[1]) }}\n      placeholder={type}\n      value={value}\n      disabled={disabled}\n      readonly={readonly}\n      autofocus={autofocus}\n      onChange={(value: any) => select(type as keyof DateObject, value)}\n      onBlur={onBlur}\n      onFocus={onFocus}\n      registry={registry}\n      label=\"\"\n      aria-describedby={ariaDescribedByIds<T>(rootId)}\n    />\n  );\n}\n\n/** The `AltDateWidget` is an alternative widget for rendering date properties.\n * @param props - The `WidgetProps` for this component\n */\nfunction AltDateWidget<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>({\n  time = false,\n  disabled = false,\n  readonly = false,\n  autofocus = false,\n  options,\n  id,\n  registry,\n  onBlur,\n  onFocus,\n  onChange,\n  value,\n}: WidgetProps<T, S, F>) {\n  const [state, setState] = useReducer(\n    (state: DateObject, action: Partial<DateObject>) => {\n      return { ...state, ...action };\n    },\n    parseDateString(value, time)\n  );\n\n  useEffect(() => {\n    if (value && value !== toDateString(state, time)) {\n      setState(parseDateString(value, time));\n    }\n  }, [value, state, time]);\n\n  useEffect(() => {\n    if (readyForChange(state)) {\n      // Only propagate to parent state if we have a complete date{time}\n      onChange(toDateString(state, time));\n    }\n  }, [state, time, onChange]);\n\n  const handleChange = useCallback(\n    (property: keyof DateObject, value: string) => {\n      setState({ [property]: value });\n    },\n    []\n  );\n\n  const handleSetNow = useCallback(\n    (event: MouseEvent<HTMLAnchorElement>) => {\n      event.preventDefault();\n      if (disabled || readonly) {\n        return;\n      }\n      const nowDateObj = parseDateString(new Date().toJSON(), time);\n      setState(nowDateObj);\n    },\n    [disabled, readonly, time]\n  );\n\n  const handleClear = useCallback(\n    (event: MouseEvent<HTMLAnchorElement>) => {\n      event.preventDefault();\n      if (disabled || readonly) {\n        return;\n      }\n      setState(parseDateString(\"\", time));\n      onChange(undefined);\n    },\n    [disabled, readonly, time, onChange]\n  );\n\n  return (\n    <ul className=\"list-inline\">\n      {dateElementProps(\n        state,\n        time,\n        options.yearsRange as [number, number] | undefined\n      ).map((elemProps, i) => (\n        <li className=\"list-inline-item\" key={i}>\n          <DateElement\n            rootId={id}\n            select={handleChange}\n            {...elemProps}\n            disabled={disabled}\n            readonly={readonly}\n            registry={registry}\n            onBlur={onBlur}\n            onFocus={onFocus}\n            autofocus={autofocus && i === 0}\n          />\n        </li>\n      ))}\n      {(options.hideNowButton !== \"undefined\"\n        ? !options.hideNowButton\n        : true) && (\n        <li className=\"list-inline-item\">\n          <a href=\"#\" className=\"btn btn-info btn-now\" onClick={handleSetNow}>\n            Now\n          </a>\n        </li>\n      )}\n      {(options.hideClearButton !== \"undefined\"\n        ? !options.hideClearButton\n        : true) && (\n        <li className=\"list-inline-item\">\n          <a\n            href=\"#\"\n            className=\"btn btn-warning btn-clear\"\n            onClick={handleClear}\n          >\n            Clear\n          </a>\n        </li>\n      )}\n    </ul>\n  );\n}\n\nexport default AltDateWidget;\n","import {\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  WidgetProps,\n} from \"@rjsf/utils\";\nimport React from \"react\";\n\n/** The `AltDateTimeWidget` is an alternative widget for rendering datetime properties.\n *  It uses the AltDateWidget for rendering, with the `time` prop set to true by default.\n *\n * @param props - The `WidgetProps` for this component\n */\nfunction AltDateTimeWidget<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>({ time = true, ...props }: WidgetProps<T, S, F>) {\n  const { AltDateWidget } = props.registry.widgets;\n  return <AltDateWidget time={time} {...props} />;\n}\n\nexport default AltDateTimeWidget;\n","import React, { useCallback } from \"react\";\nimport {\n  ariaDescribedByIds,\n  descriptionId,\n  getTemplate,\n  schemaRequiresTrueValue,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  WidgetProps,\n} from \"@rjsf/utils\";\n\n/** The `CheckBoxWidget` is a widget for rendering boolean properties.\n *  It is typically used to represent a boolean.\n *\n * @param props - The `WidgetProps` for this component\n */\nfunction CheckboxWidget<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>({\n  schema,\n  uiSchema,\n  options,\n  id,\n  value,\n  disabled,\n  readonly,\n  label,\n  autofocus = false,\n  onBlur,\n  onFocus,\n  onChange,\n  registry,\n}: WidgetProps<T, S, F>) {\n  const DescriptionFieldTemplate = getTemplate<\n    \"DescriptionFieldTemplate\",\n    T,\n    S,\n    F\n  >(\"DescriptionFieldTemplate\", registry, options);\n  // Because an unchecked checkbox will cause html5 validation to fail, only add\n  // the \"required\" attribute if the field value must be \"true\", due to the\n  // \"const\" or \"enum\" keywords\n  const required = schemaRequiresTrueValue<S>(schema);\n\n  const handleChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) =>\n      onChange(event.target.checked),\n    [onChange]\n  );\n\n  const handleBlur = useCallback(\n    (event: React.FocusEvent<HTMLInputElement>) =>\n      onBlur(id, event.target.checked),\n    [onBlur, id]\n  );\n\n  const handleFocus = useCallback(\n    (event: React.FocusEvent<HTMLInputElement>) =>\n      onFocus(id, event.target.checked),\n    [onFocus, id]\n  );\n\n  return (\n    <div className={`checkbox ${disabled || readonly ? \"disabled\" : \"\"}`}>\n      {schema.description && (\n        <DescriptionFieldTemplate\n          id={descriptionId<T>(id)}\n          description={schema.description}\n          schema={schema}\n          uiSchema={uiSchema}\n          registry={registry}\n        />\n      )}\n      <label>\n        <input\n          type=\"checkbox\"\n          id={id}\n          name={id}\n          checked={typeof value === \"undefined\" ? false : value}\n          required={required}\n          disabled={disabled || readonly}\n          autoFocus={autofocus}\n          onChange={handleChange}\n          onBlur={handleBlur}\n          onFocus={handleFocus}\n          aria-describedby={ariaDescribedByIds<T>(id)}\n        />\n        <span>{label}</span>\n      </label>\n    </div>\n  );\n}\n\nexport default CheckboxWidget;\n","import React, { ChangeEvent, FocusEvent, useCallback } from \"react\";\nimport {\n  ariaDescribedByIds,\n  enumOptionsDeselectValue,\n  enumOptionsIsSelected,\n  enumOptionsSelectValue,\n  enumOptionsValueForIndex,\n  optionId,\n  FormContextType,\n  WidgetProps,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from \"@rjsf/utils\";\n\n/** The `CheckboxesWidget` is a widget for rendering checkbox groups.\n *  It is typically used to represent an array of enums.\n *\n * @param props - The `WidgetProps` for this component\n */\nfunction CheckboxesWidget<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>({\n  id,\n  disabled,\n  options: { inline = false, enumOptions, enumDisabled, emptyValue },\n  value,\n  autofocus = false,\n  readonly,\n  onChange,\n  onBlur,\n  onFocus,\n}: WidgetProps<T, S, F>) {\n  const checkboxesValues = Array.isArray(value) ? value : [value];\n\n  const handleBlur = useCallback(\n    ({ target: { value } }: FocusEvent<HTMLInputElement>) =>\n      onBlur(id, enumOptionsValueForIndex<S>(value, enumOptions, emptyValue)),\n    [onBlur, id]\n  );\n\n  const handleFocus = useCallback(\n    ({ target: { value } }: FocusEvent<HTMLInputElement>) =>\n      onFocus(id, enumOptionsValueForIndex<S>(value, enumOptions, emptyValue)),\n    [onFocus, id]\n  );\n  return (\n    <div className=\"checkboxes\" id={id}>\n      {Array.isArray(enumOptions) &&\n        enumOptions.map((option, index) => {\n          const checked = enumOptionsIsSelected<S>(\n            option.value,\n            checkboxesValues\n          );\n          const itemDisabled =\n            Array.isArray(enumDisabled) &&\n            enumDisabled.indexOf(option.value) !== -1;\n          const disabledCls =\n            disabled || itemDisabled || readonly ? \"disabled\" : \"\";\n\n          const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n            if (event.target.checked) {\n              onChange(\n                enumOptionsSelectValue<S>(index, checkboxesValues, enumOptions)\n              );\n            } else {\n              onChange(\n                enumOptionsDeselectValue<S>(\n                  index,\n                  checkboxesValues,\n                  enumOptions\n                )\n              );\n            }\n          };\n\n          const checkbox = (\n            <span>\n              <input\n                type=\"checkbox\"\n                id={optionId(id, index)}\n                name={id}\n                checked={checked}\n                value={String(index)}\n                disabled={disabled || itemDisabled || readonly}\n                autoFocus={autofocus && index === 0}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                onFocus={handleFocus}\n                aria-describedby={ariaDescribedByIds<T>(id)}\n              />\n              <span>{option.label}</span>\n            </span>\n          );\n          return inline ? (\n            <label key={index} className={`checkbox-inline ${disabledCls}`}>\n              {checkbox}\n            </label>\n          ) : (\n            <div key={index} className={`checkbox ${disabledCls}`}>\n              <label>{checkbox}</label>\n            </div>\n          );\n        })}\n    </div>\n  );\n}\n\nexport default CheckboxesWidget;\n","import React from \"react\";\nimport {\n  getTemplate,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  WidgetProps,\n} from \"@rjsf/utils\";\n\n/** The `ColorWidget` component uses the `BaseInputTemplate` changing the type to `color` and disables it when it is\n * either disabled or readonly.\n *\n * @param props - The `WidgetProps` for this component\n */\nexport default function ColorWidget<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: WidgetProps<T, S, F>) {\n  const { disabled, readonly, options, registry } = props;\n  const BaseInputTemplate = getTemplate<\"BaseInputTemplate\", T, S, F>(\n    \"BaseInputTemplate\",\n    registry,\n    options\n  );\n  return (\n    <BaseInputTemplate\n      type=\"color\"\n      {...props}\n      disabled={disabled || readonly}\n    />\n  );\n}\n","import React, { useCallback } from \"react\";\nimport {\n  getTemplate,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  WidgetProps,\n} from \"@rjsf/utils\";\n\n/** The `DateWidget` component uses the `BaseInputTemplate` changing the type to `date` and transforms\n * the value to undefined when it is falsy during the `onChange` handling.\n *\n * @param props - The `WidgetProps` for this component\n */\nexport default function DateWidget<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: WidgetProps<T, S, F>) {\n  const { onChange, options, registry } = props;\n  const BaseInputTemplate = getTemplate<\"BaseInputTemplate\", T, S, F>(\n    \"BaseInputTemplate\",\n    registry,\n    options\n  );\n  const handleChange = useCallback(\n    (value: React.ChangeEvent) => onChange(value || undefined),\n    [onChange]\n  );\n\n  return <BaseInputTemplate type=\"date\" {...props} onChange={handleChange} />;\n}\n","import React from \"react\";\nimport {\n  getTemplate,\n  localToUTC,\n  utcToLocal,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  WidgetProps,\n} from \"@rjsf/utils\";\n\n/** The `DateTimeWidget` component uses the `BaseInputTemplate` changing the type to `datetime-local` and transforms\n * the value to/from utc using the appropriate utility functions.\n *\n * @param props - The `WidgetProps` for this component\n */\nexport default function DateTimeWidget<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: WidgetProps<T, S, F>) {\n  const { onChange, value, options, registry } = props;\n  const BaseInputTemplate = getTemplate<\"BaseInputTemplate\", T, S, F>(\n    \"BaseInputTemplate\",\n    registry,\n    options\n  );\n  return (\n    <BaseInputTemplate\n      type=\"datetime-local\"\n      {...props}\n      value={utcToLocal(value)}\n      onChange={(value) => onChange(localToUTC(value))}\n    />\n  );\n}\n","import React from \"react\";\nimport {\n  getTemplate,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  WidgetProps,\n} from \"@rjsf/utils\";\n\n/** The `EmailWidget` component uses the `BaseInputTemplate` changing the type to `email`.\n *\n * @param props - The `WidgetProps` for this component\n */\nexport default function EmailWidget<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: WidgetProps<T, S, F>) {\n  const { options, registry } = props;\n  const BaseInputTemplate = getTemplate<\"BaseInputTemplate\", T, S, F>(\n    \"BaseInputTemplate\",\n    registry,\n    options\n  );\n  return <BaseInputTemplate type=\"email\" {...props} />;\n}\n","import React, { ChangeEvent, useCallback, useMemo, useState } from \"react\";\nimport {\n  ariaDescribedByIds,\n  dataURItoBlob,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  WidgetProps,\n} from \"@rjsf/utils\";\n\nfunction addNameToDataURL(dataURL: string, name: string) {\n  if (dataURL === null) {\n    return null;\n  }\n  return dataURL.replace(\";base64\", `;name=${encodeURIComponent(name)};base64`);\n}\n\ntype FileInfoType = {\n  dataURL?: string | null;\n  name: string;\n  size: number;\n  type: string;\n};\n\nfunction processFile(file: File): Promise<FileInfoType> {\n  const { name, size, type } = file;\n  return new Promise((resolve, reject) => {\n    const reader = new window.FileReader();\n    reader.onerror = reject;\n    reader.onload = (event) => {\n      if (typeof event.target?.result === \"string\") {\n        resolve({\n          dataURL: addNameToDataURL(event.target.result, name),\n          name,\n          size,\n          type,\n        });\n      } else {\n        resolve({\n          dataURL: null,\n          name,\n          size,\n          type,\n        });\n      }\n    };\n    reader.readAsDataURL(file);\n  });\n}\n\nfunction processFiles(files: FileList) {\n  return Promise.all(Array.from(files).map(processFile));\n}\n\nfunction FilesInfo({\n  filesInfo,\n}: {\n  filesInfo: { name: string; size: number; type: string }[];\n}) {\n  if (filesInfo.length === 0) {\n    return null;\n  }\n  return (\n    <ul className=\"file-info\">\n      {filesInfo.map((fileInfo, key) => {\n        const { name, size, type } = fileInfo;\n        return (\n          <li key={key}>\n            <strong>{name}</strong> ({type}, {size} bytes)\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nfunction extractFileInfo(dataURLs: string[]) {\n  return dataURLs\n    .filter((dataURL) => typeof dataURL !== \"undefined\")\n    .map((dataURL) => {\n      const { blob, name } = dataURItoBlob(dataURL);\n      return {\n        name: name,\n        size: blob.size,\n        type: blob.type,\n      };\n    });\n}\n\n/**\n *  The `FileWidget` is a widget for rendering file upload fields.\n *  It is typically used with a string property with data-url format.\n */\nfunction FileWidget<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>({\n  multiple,\n  id,\n  readonly,\n  disabled,\n  onChange,\n  value,\n  autofocus = false,\n  options,\n}: WidgetProps<T, S, F>) {\n  const extractedFilesInfo = useMemo(\n    () =>\n      Array.isArray(value) ? extractFileInfo(value) : extractFileInfo([value]),\n    [value]\n  );\n  const [filesInfo, setFilesInfo] =\n    useState<FileInfoType[]>(extractedFilesInfo);\n\n  const handleChange = useCallback(\n    (event: ChangeEvent<HTMLInputElement>) => {\n      if (!event.target.files) {\n        return;\n      }\n      processFiles(event.target.files).then((filesInfoEvent) => {\n        setFilesInfo(filesInfoEvent);\n        const newValue = filesInfoEvent.map((fileInfo) => fileInfo.dataURL);\n        if (multiple) {\n          onChange(newValue);\n        } else {\n          onChange(newValue[0]);\n        }\n      });\n    },\n    [multiple, onChange]\n  );\n\n  return (\n    <div>\n      <p>\n        <input\n          id={id}\n          name={id}\n          type=\"file\"\n          disabled={readonly || disabled}\n          onChange={handleChange}\n          defaultValue=\"\"\n          autoFocus={autofocus}\n          multiple={multiple}\n          accept={options.accept ? String(options.accept) : undefined}\n          aria-describedby={ariaDescribedByIds<T>(id)}\n        />\n      </p>\n      <FilesInfo filesInfo={filesInfo} />\n    </div>\n  );\n}\n\nexport default FileWidget;\n","import React from \"react\";\nimport {\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  WidgetProps,\n} from \"@rjsf/utils\";\n\n/** The `HiddenWidget` is a widget for rendering a hidden input field.\n *  It is typically used by setting type to \"hidden\".\n *\n * @param props - The `WidgetProps` for this component\n */\nfunction HiddenWidget<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>({ id, value }: WidgetProps<T, S, F>) {\n  return (\n    <input\n      type=\"hidden\"\n      id={id}\n      name={id}\n      value={typeof value === \"undefined\" ? \"\" : value}\n    />\n  );\n}\n\nexport default HiddenWidget;\n","import React from \"react\";\nimport {\n  getTemplate,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  WidgetProps,\n} from \"@rjsf/utils\";\n\n/** The `PasswordWidget` component uses the `BaseInputTemplate` changing the type to `password`.\n *\n * @param props - The `WidgetProps` for this component\n */\nexport default function PasswordWidget<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: WidgetProps<T, S, F>) {\n  const { options, registry } = props;\n  const BaseInputTemplate = getTemplate<\"BaseInputTemplate\", T, S, F>(\n    \"BaseInputTemplate\",\n    registry,\n    options\n  );\n  return <BaseInputTemplate type=\"password\" {...props} />;\n}\n","import React, { FocusEvent, useCallback } from \"react\";\nimport {\n  ariaDescribedByIds,\n  enumOptionsIsSelected,\n  enumOptionsValueForIndex,\n  optionId,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  WidgetProps,\n} from \"@rjsf/utils\";\n\n/** The `RadioWidget` is a widget for rendering a radio group.\n *  It is typically used with a string property constrained with enum options.\n *\n * @param props - The `WidgetProps` for this component\n */\nfunction RadioWidget<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>({\n  options,\n  value,\n  required,\n  disabled,\n  readonly,\n  autofocus = false,\n  onBlur,\n  onFocus,\n  onChange,\n  id,\n}: WidgetProps<T, S, F>) {\n  // Generating a unique field name to identify this set of radio buttons\n  const name = Math.random().toString();\n  const { enumOptions, enumDisabled, inline, emptyValue } = options;\n\n  const handleBlur = useCallback(\n    ({ target: { value } }: FocusEvent<HTMLInputElement>) =>\n      onBlur(id, enumOptionsValueForIndex<S>(value, enumOptions, emptyValue)),\n    [onBlur, id]\n  );\n\n  const handleFocus = useCallback(\n    ({ target: { value } }: FocusEvent<HTMLInputElement>) =>\n      onFocus(id, enumOptionsValueForIndex<S>(value, enumOptions, emptyValue)),\n    [onFocus, id]\n  );\n\n  return (\n    <div className=\"field-radio-group\" id={id}>\n      {Array.isArray(enumOptions) &&\n        enumOptions.map((option, i) => {\n          const checked = enumOptionsIsSelected<S>(option.value, value);\n          const itemDisabled =\n            Array.isArray(enumDisabled) &&\n            enumDisabled.indexOf(option.value) !== -1;\n          const disabledCls =\n            disabled || itemDisabled || readonly ? \"disabled\" : \"\";\n\n          const handleChange = () => onChange(option.value);\n\n          const radio = (\n            <span>\n              <input\n                type=\"radio\"\n                id={optionId(id, i)}\n                checked={checked}\n                name={name}\n                required={required}\n                value={String(i)}\n                disabled={disabled || itemDisabled || readonly}\n                autoFocus={autofocus && i === 0}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                onFocus={handleFocus}\n                aria-describedby={ariaDescribedByIds<T>(id)}\n              />\n              <span>{option.label}</span>\n            </span>\n          );\n\n          return inline ? (\n            <label key={i} className={`radio-inline ${disabledCls}`}>\n              {radio}\n            </label>\n          ) : (\n            <div key={i} className={`radio ${disabledCls}`}>\n              <label>{radio}</label>\n            </div>\n          );\n        })}\n    </div>\n  );\n}\n\nexport default RadioWidget;\n","import React from \"react\";\nimport {\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  WidgetProps,\n} from \"@rjsf/utils\";\n\n/** The `RangeWidget` component uses the `BaseInputTemplate` changing the type to `range` and wrapping the result\n * in a div, with the value along side it.\n *\n * @param props - The `WidgetProps` for this component\n */\nexport default function RangeWidget<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: WidgetProps<T, S, F>) {\n  const {\n    value,\n    registry: {\n      templates: { BaseInputTemplate },\n    },\n  } = props;\n  return (\n    <div className=\"field-range-wrapper\">\n      <BaseInputTemplate type=\"range\" {...props} />\n      <span className=\"range-view\">{value}</span>\n    </div>\n  );\n}\n","import React, { ChangeEvent, FocusEvent, useCallback } from \"react\";\nimport {\n  ariaDescribedByIds,\n  enumOptionsIndexForValue,\n  enumOptionsValueForIndex,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  WidgetProps,\n} from \"@rjsf/utils\";\n\nfunction getValue(\n  event: React.SyntheticEvent<HTMLSelectElement>,\n  multiple: boolean\n) {\n  if (multiple) {\n    return Array.from((event.target as HTMLSelectElement).options)\n      .slice()\n      .filter((o) => o.selected)\n      .map((o) => o.value);\n  }\n  return (event.target as HTMLSelectElement).value;\n}\n\n/** The `SelectWidget` is a widget for rendering dropdowns.\n *  It is typically used with string properties constrained with enum options.\n *\n * @param props - The `WidgetProps` for this component\n */\nfunction SelectWidget<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>({\n  schema,\n  id,\n  options,\n  value,\n  required,\n  disabled,\n  readonly,\n  multiple = false,\n  autofocus = false,\n  onChange,\n  onBlur,\n  onFocus,\n  placeholder,\n}: WidgetProps<T, S, F>) {\n  const { enumOptions, enumDisabled, emptyValue: optEmptyVal } = options;\n  const emptyValue = multiple ? [] : \"\";\n\n  const handleFocus = useCallback(\n    (event: FocusEvent<HTMLSelectElement>) => {\n      const newValue = getValue(event, multiple);\n      return onFocus(\n        id,\n        enumOptionsValueForIndex<S>(newValue, enumOptions, optEmptyVal)\n      );\n    },\n    [onFocus, id, schema, multiple, options]\n  );\n\n  const handleBlur = useCallback(\n    (event: FocusEvent<HTMLSelectElement>) => {\n      const newValue = getValue(event, multiple);\n      return onBlur(\n        id,\n        enumOptionsValueForIndex<S>(newValue, enumOptions, optEmptyVal)\n      );\n    },\n    [onBlur, id, schema, multiple, options]\n  );\n\n  const handleChange = useCallback(\n    (event: ChangeEvent<HTMLSelectElement>) => {\n      const newValue = getValue(event, multiple);\n      return onChange(\n        enumOptionsValueForIndex<S>(newValue, enumOptions, optEmptyVal)\n      );\n    },\n    [onChange, schema, multiple, options]\n  );\n\n  const selectedIndexes = enumOptionsIndexForValue<S>(\n    value,\n    enumOptions,\n    multiple\n  );\n\n  return (\n    <select\n      id={id}\n      name={id}\n      multiple={multiple}\n      className=\"form-control\"\n      value={\n        typeof selectedIndexes === \"undefined\" ? emptyValue : selectedIndexes\n      }\n      required={required}\n      disabled={disabled || readonly}\n      autoFocus={autofocus}\n      onBlur={handleBlur}\n      onFocus={handleFocus}\n      onChange={handleChange}\n      aria-describedby={ariaDescribedByIds<T>(id)}\n    >\n      {!multiple && schema.default === undefined && (\n        <option value=\"\">{placeholder}</option>\n      )}\n      {Array.isArray(enumOptions) &&\n        enumOptions.map(({ value, label }, i) => {\n          const disabled = enumDisabled && enumDisabled.indexOf(value) !== -1;\n          return (\n            <option key={i} value={String(i)} disabled={disabled}>\n              {label}\n            </option>\n          );\n        })}\n    </select>\n  );\n}\n\nexport default SelectWidget;\n","import React, { FocusEvent, useCallback } from \"react\";\nimport {\n  ariaDescribedByIds,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  WidgetProps,\n} from \"@rjsf/utils\";\n\n/** The `TextareaWidget` is a widget for rendering input fields as textarea.\n *\n * @param props - The `WidgetProps` for this component\n */\nfunction TextareaWidget<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>({\n  id,\n  options = {},\n  placeholder,\n  value,\n  required,\n  disabled,\n  readonly,\n  autofocus = false,\n  onChange,\n  onBlur,\n  onFocus,\n}: WidgetProps<T, S, F>) {\n  const handleChange = useCallback(\n    ({ target: { value } }: React.ChangeEvent<HTMLTextAreaElement>) =>\n      onChange(value === \"\" ? options.emptyValue : value),\n    [onChange, options.emptyValue]\n  );\n\n  const handleBlur = useCallback(\n    ({ target: { value } }: FocusEvent<HTMLTextAreaElement>) =>\n      onBlur(id, value),\n    [onBlur, id]\n  );\n\n  const handleFocus = useCallback(\n    ({ target: { value } }: FocusEvent<HTMLTextAreaElement>) =>\n      onFocus(id, value),\n    [id, onFocus]\n  );\n\n  return (\n    <textarea\n      id={id}\n      name={id}\n      className=\"form-control\"\n      value={value ? value : \"\"}\n      placeholder={placeholder}\n      required={required}\n      disabled={disabled}\n      readOnly={readonly}\n      autoFocus={autofocus}\n      rows={options.rows}\n      onBlur={handleBlur}\n      onFocus={handleFocus}\n      onChange={handleChange}\n      aria-describedby={ariaDescribedByIds<T>(id)}\n    />\n  );\n}\n\nTextareaWidget.defaultProps = {\n  autofocus: false,\n  options: {},\n};\n\nexport default TextareaWidget;\n","import React from \"react\";\nimport {\n  getTemplate,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  WidgetProps,\n} from \"@rjsf/utils\";\n\n/** The `TextWidget` component uses the `BaseInputTemplate`.\n *\n * @param props - The `WidgetProps` for this component\n */\nexport default function TextWidget<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: WidgetProps<T, S, F>) {\n  const { options, registry } = props;\n  const BaseInputTemplate = getTemplate<\"BaseInputTemplate\", T, S, F>(\n    \"BaseInputTemplate\",\n    registry,\n    options\n  );\n  return <BaseInputTemplate {...props} />;\n}\n","import React from \"react\";\nimport {\n  getTemplate,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  WidgetProps,\n} from \"@rjsf/utils\";\n\n/** The `URLWidget` component uses the `BaseInputTemplate` changing the type to `url`.\n *\n * @param props - The `WidgetProps` for this component\n */\nexport default function URLWidget<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: WidgetProps<T, S, F>) {\n  const { options, registry } = props;\n  const BaseInputTemplate = getTemplate<\"BaseInputTemplate\", T, S, F>(\n    \"BaseInputTemplate\",\n    registry,\n    options\n  );\n  return <BaseInputTemplate type=\"url\" {...props} />;\n}\n","import React from \"react\";\nimport {\n  getTemplate,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  WidgetProps,\n} from \"@rjsf/utils\";\n\n/** The `UpDownWidget` component uses the `BaseInputTemplate` changing the type to `number`.\n *\n * @param props - The `WidgetProps` for this component\n */\nexport default function UpDownWidget<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: WidgetProps<T, S, F>) {\n  const { options, registry } = props;\n  const BaseInputTemplate = getTemplate<\"BaseInputTemplate\", T, S, F>(\n    \"BaseInputTemplate\",\n    registry,\n    options\n  );\n  return <BaseInputTemplate type=\"number\" {...props} />;\n}\n","import {\n  FormContextType,\n  RegistryWidgetsType,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from \"@rjsf/utils\";\n\nimport AltDateWidget from \"./AltDateWidget\";\nimport AltDateTimeWidget from \"./AltDateTimeWidget\";\nimport CheckboxWidget from \"./CheckboxWidget\";\nimport CheckboxesWidget from \"./CheckboxesWidget\";\nimport ColorWidget from \"./ColorWidget\";\nimport DateWidget from \"./DateWidget\";\nimport DateTimeWidget from \"./DateTimeWidget\";\nimport EmailWidget from \"./EmailWidget\";\nimport FileWidget from \"./FileWidget\";\nimport HiddenWidget from \"./HiddenWidget\";\nimport PasswordWidget from \"./PasswordWidget\";\nimport RadioWidget from \"./RadioWidget\";\nimport RangeWidget from \"./RangeWidget\";\nimport SelectWidget from \"./SelectWidget\";\nimport TextareaWidget from \"./TextareaWidget\";\nimport TextWidget from \"./TextWidget\";\nimport URLWidget from \"./URLWidget\";\nimport UpDownWidget from \"./UpDownWidget\";\n\nfunction widgets<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(): RegistryWidgetsType<T, S, F> {\n  return {\n    PasswordWidget,\n    RadioWidget,\n    UpDownWidget,\n    RangeWidget,\n    SelectWidget,\n    TextWidget,\n    DateWidget,\n    DateTimeWidget,\n    AltDateWidget,\n    AltDateTimeWidget,\n    EmailWidget,\n    URLWidget,\n    TextareaWidget,\n    HiddenWidget,\n    ColorWidget,\n    FileWidget,\n    CheckboxWidget,\n    CheckboxesWidget,\n  };\n}\n\nexport default widgets;\n","import {\n  FormContextType,\n  Registry,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from \"@rjsf/utils\";\n\nimport fields from \"./components/fields\";\nimport templates from \"./components/templates\";\nimport widgets from \"./components/widgets\";\n\n/** The default registry consists of all the fields, templates and widgets provided in the core implementation,\n * plus an empty `rootSchema` and `formContext. We omit schemaUtils here because it cannot be defaulted without a\n * rootSchema and validator. It will be added into the computed registry later in the Form.\n */\nexport default function getDefaultRegistry<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(): Omit<Registry<T, S, F>, \"schemaUtils\"> {\n  return {\n    fields: fields<T, S, F>(),\n    templates: templates<T, S, F>(),\n    widgets: widgets<T, S, F>(),\n    rootSchema: {} as S,\n    formContext: {} as F,\n  };\n}\n","import React, { Component } from \"react\";\nimport {\n  createSchemaUtils,\n  CustomValidator,\n  deepEquals,\n  ErrorSchema,\n  ErrorTransformer,\n  FormContextType,\n  GenericObjectType,\n  getTemplate,\n  getUiOptions,\n  IdSchema,\n  isObject,\n  mergeObjects,\n  NAME_KEY,\n  PathSchema,\n  StrictRJSFSchema,\n  Registry,\n  RegistryFieldsType,\n  RegistryWidgetsType,\n  RJSFSchema,\n  RJSFValidationError,\n  RJSF_ADDITONAL_PROPERTIES_FLAG,\n  SchemaUtilsType,\n  shouldRender,\n  TemplatesType,\n  UiSchema,\n  ValidationData,\n  ValidatorType,\n} from \"@rjsf/utils\";\nimport _get from \"lodash/get\";\nimport _isEmpty from \"lodash/isEmpty\";\nimport _pick from \"lodash/pick\";\nimport _toPath from \"lodash/toPath\";\n\nimport getDefaultRegistry from \"../getDefaultRegistry\";\n\n/** The properties that are passed to the `Form` */\nexport interface FormProps<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n> {\n  /** The JSON schema object for the form */\n  schema: S;\n  /** An implementation of the `ValidatorType` interface that is needed for form validation to work */\n  validator: ValidatorType<T, S, F>;\n  /** The optional children for the form, if provided, it will replace the default `SubmitButton` */\n  children?: React.ReactNode;\n  /** The uiSchema for the form */\n  uiSchema?: UiSchema<T, S, F>;\n  /** The data for the form, used to prefill a form with existing data */\n  formData?: T;\n  // Form presentation and behavior modifiers\n  /** You can provide a `formContext` object to the form, which is passed down to all fields and widgets. Useful for\n   * implementing context aware fields and widgets.\n   *\n   * NOTE: Setting `{readonlyAsDisabled: false}` on the formContext will make the antd theme treat readOnly fields as\n   * disabled.\n   */\n  formContext?: F;\n  /** To avoid collisions with existing ids in the DOM, it is possible to change the prefix used for ids;\n   * Default is `root`\n   */\n  idPrefix?: string;\n  /** To avoid using a path separator that is present in field names, it is possible to change the separator used for\n   * ids (Default is `_`)\n   */\n  idSeparator?: string;\n  /** It's possible to disable the whole form by setting the `disabled` prop. The `disabled` prop is then forwarded down\n   * to each field of the form. If you just want to disable some fields, see the `ui:disabled` parameter in `uiSchema`\n   */\n  disabled?: boolean;\n  /** It's possible to make the whole form read-only by setting the `readonly` prop. The `readonly` prop is then\n   * forwarded down to each field of the form. If you just want to make some fields read-only, see the `ui:readonly`\n   * parameter in `uiSchema`\n   */\n  readonly?: boolean;\n  // Form registry\n  /** The dictionary of registered fields in the form */\n  fields?: RegistryFieldsType<T, S, F>;\n  /** The dictionary of registered templates in the form; Partial allows a subset to be provided beyond the defaults */\n  templates?: Partial<Omit<TemplatesType<T, S, F>, \"ButtonTemplates\">> & {\n    ButtonTemplates?: Partial<TemplatesType<T, S, F>[\"ButtonTemplates\"]>;\n  };\n  /** The dictionary of registered widgets in the form */\n  widgets?: RegistryWidgetsType<T, S, F>;\n  // Callbacks\n  /** If you plan on being notified every time the form data are updated, you can pass an `onChange` handler, which will\n   * receive the same args as `onSubmit` any time a value is updated in the form. Can also return the `id` of the field\n   * that caused the change\n   */\n  onChange?: (data: IChangeEvent<T, S, F>, id?: string) => void;\n  /** To react when submitted form data are invalid, pass an `onError` handler. It will be passed the list of\n   * encountered errors\n   */\n  onError?: (errors: RJSFValidationError[]) => void;\n  /** You can pass a function as the `onSubmit` prop of your `Form` component to listen to when the form is submitted\n   * and its data are valid. It will be passed a result object having a `formData` attribute, which is the valid form\n   * data you're usually after. The original event will also be passed as a second parameter\n   */\n  onSubmit?: (data: IChangeEvent<T, S, F>, event: React.FormEvent<any>) => void;\n  /** Sometimes you may want to trigger events or modify external state when a field has been touched, so you can pass\n   * an `onBlur` handler, which will receive the id of the input that was blurred and the field value\n   */\n  onBlur?: (id: string, data: any) => void;\n  /** Sometimes you may want to trigger events or modify external state when a field has been focused, so you can pass\n   * an `onFocus` handler, which will receive the id of the input that is focused and the field value\n   */\n  onFocus?: (id: string, data: any) => void;\n  // <form /> HTML attributes\n  /** The value of this prop will be passed to the `accept-charset` HTML attribute on the form */\n  acceptcharset?: string;\n  /** The value of this prop will be passed to the `action` HTML attribute on the form\n   *\n   * NOTE: this just renders the `action` attribute in the HTML markup. There is no real network request being sent to\n   * this `action` on submit. Instead, react-jsonschema-form catches the submit event with `event.preventDefault()`\n   * and then calls the `onSubmit` function, where you could send a request programmatically with `fetch` or similar.\n   */\n  action?: string;\n  /** The value of this prop will be passed to the `autocomplete` HTML attribute on the form */\n  autoComplete?: string;\n  /** The value of this prop will be passed to the `class` HTML attribute on the form */\n  className?: string;\n  /** The value of this prop will be passed to the `enctype` HTML attribute on the form */\n  enctype?: string;\n  /** The value of this prop will be passed to the `id` HTML attribute on the form */\n  id?: string;\n  /** The value of this prop will be passed to the `name` HTML attribute on the form */\n  name?: string;\n  /** The value of this prop will be passed to the `method` HTML attribute on the form */\n  method?: string;\n  /** It's possible to change the default `form` tag name to a different HTML tag, which can be helpful if you are\n   * nesting forms. However, native browser form behaviour, such as submitting when the `Enter` key is pressed, may no\n   * longer work\n   */\n  tagName?: React.ElementType;\n  /** The value of this prop will be passed to the `target` HTML attribute on the form */\n  target?: string;\n  // Errors and validation\n  /** Formerly the `validate` prop; Takes a function that specifies custom validation rules for the form */\n  customValidate?: CustomValidator<T, S, F>;\n  /** This prop allows passing in custom errors that are augmented with the existing JSON Schema errors on the form; it\n   * can be used to implement asynchronous validation\n   */\n  extraErrors?: ErrorSchema<T>;\n  /** If set to true, turns off HTML5 validation on the form; Set to `false` by default */\n  noHtml5Validate?: boolean;\n  /** If set to true, turns off all validation. Set to `false` by default\n   *\n   * @deprecated - In a future release, this switch may be replaced by making `validator` prop optional\n   */\n  noValidate?: boolean;\n  /** If set to true, the form will perform validation and show any validation errors whenever the form data is changed,\n   * rather than just on submit\n   */\n  liveValidate?: boolean;\n  /** If `omitExtraData` and `liveOmit` are both set to true, then extra form data values that are not in any form field\n   * will be removed whenever `onChange` is called. Set to `false` by default\n   */\n  liveOmit?: boolean;\n  /** If set to true, then extra form data values that are not in any form field will be removed whenever `onSubmit` is\n   * called. Set to `false` by default.\n   */\n  omitExtraData?: boolean;\n  /** When this prop is set to `top` or 'bottom', a list of errors (or the custom error list defined in the `ErrorList`) will also\n   * show. When set to false, only inline input validation errors will be shown. Set to `top` by default\n   */\n  showErrorList?: false | \"top\" | \"bottom\";\n  /** A function can be passed to this prop in order to make modifications to the default errors resulting from JSON\n   * Schema validation\n   */\n  transformErrors?: ErrorTransformer<T, S, F>;\n  /** If set to true, then the first field with an error will receive the focus when the form is submitted with errors\n   */\n  focusOnFirstError?: boolean;\n  // Private\n  /**\n   * _internalFormWrapper is currently used by the semantic-ui theme to provide a custom wrapper around `<Form />`\n   * that supports the proper rendering of those themes. To use this prop, one must pass a component that takes two\n   * props: `children` and `as`. That component, at minimum, should render the `children` inside of a <form /> tag\n   * unless `as` is provided, in which case, use the `as` prop in place of `<form />`.\n   * i.e.:\n   * ```\n   * export default function InternalForm({ children, as }) {\n   *   const FormTag = as || 'form';\n   *   return <FormTag>{children}</FormTag>;\n   * }\n   * ```\n   *\n   * Use at your own risk as this prop is private and may change at any time without notice.\n   */\n  _internalFormWrapper?: React.ElementType;\n  /** Support receiving a React ref to the Form\n   */\n  ref?: React.Ref<Form<T, S, F>>;\n}\n\n/** The data that is contained within the state for the `Form` */\nexport interface FormState<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n> {\n  /** The JSON schema object for the form */\n  schema: S;\n  /** The uiSchema for the form */\n  uiSchema: UiSchema<T, S, F>;\n  /** The `IdSchema` for the form, computed from the `schema`, the `rootFieldId`, the `formData` and the `idPrefix` and\n   * `idSeparator` props.\n   */\n  idSchema: IdSchema<T>;\n  /** The schemaUtils implementation used by the `Form`, created from the `validator` and the `schema` */\n  schemaUtils: SchemaUtilsType<T, S, F>;\n  /** The current data for the form, computed from the `formData` prop and the changes made by the user */\n  formData?: T;\n  /** Flag indicating whether the form is in edit mode, true when `formData` is passed to the form, otherwise false */\n  edit: boolean;\n  /** The current list of errors for the form, includes `extraErrors` */\n  errors: RJSFValidationError[];\n  /** The current errors, in `ErrorSchema` format, for the form, includes `extraErrors` */\n  errorSchema: ErrorSchema<T>;\n  /** The current list of errors for the form directly from schema validation, does NOT include `extraErrors` */\n  schemaValidationErrors: RJSFValidationError[];\n  /** The current errors, in `ErrorSchema` format, for the form directly from schema validation, does NOT include\n   * `extraErrors`\n   */\n  schemaValidationErrorSchema: ErrorSchema<T>;\n}\n\n/** The event data passed when changes have been made to the form, includes everything from the `FormState` except\n * the schema validation errors. An additional `status` is added when returned from `onSubmit`\n */\nexport interface IChangeEvent<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n> extends Omit<\n    FormState<T, S, F>,\n    \"schemaValidationErrors\" | \"schemaValidationErrorSchema\"\n  > {\n  /** The status of the form when submitted */\n  status?: \"submitted\";\n}\n\n/** The `Form` component renders the outer form and all the fields defined in the `schema` */\nexport default class Form<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n> extends Component<FormProps<T, S, F>, FormState<T, S, F>> {\n  /** The ref used to hold the `form` element, this needs to be `any` because `tagName` or `_internalFormWrapper` can\n   * provide any possible type here\n   */\n  formElement: React.RefObject<any>;\n\n  /** Constructs the `Form` from the `props`. Will setup the initial state from the props. It will also call the\n   * `onChange` handler if the initially provided `formData` is modified to add missing default values as part of the\n   * state construction.\n   *\n   * @param props - The initial props for the `Form`\n   */\n  constructor(props: FormProps<T, S, F>) {\n    super(props);\n\n    if (!props.validator) {\n      throw new Error(\"A validator is required for Form functionality to work\");\n    }\n\n    this.state = this.getStateFromProps(props, props.formData);\n    if (\n      this.props.onChange &&\n      !deepEquals(this.state.formData, this.props.formData)\n    ) {\n      this.props.onChange(this.state);\n    }\n    this.formElement = React.createRef();\n  }\n\n  /** React lifecycle method that gets called before new props are provided, updates the state based on new props. It\n   * will also call the`onChange` handler if the `formData` is modified to add missing default values as part of the\n   * state construction.\n   *\n   * @param nextProps - The new set of props about to be applied to the `Form`\n   */\n  UNSAFE_componentWillReceiveProps(nextProps: FormProps<T, S, F>) {\n    const nextState = this.getStateFromProps(nextProps, nextProps.formData);\n    if (\n      !deepEquals(nextState.formData, nextProps.formData) &&\n      !deepEquals(nextState.formData, this.state.formData) &&\n      nextProps.onChange\n    ) {\n      nextProps.onChange(nextState);\n    }\n    this.setState(nextState);\n  }\n\n  /** Extracts the updated state from the given `props` and `inputFormData`. As part of this process, the\n   * `inputFormData` is first processed to add any missing required defaults. After that, the data is run through the\n   * validation process IF required by the `props`.\n   *\n   * @param props - The props passed to the `Form`\n   * @param inputFormData - The new or current data for the `Form`\n   * @returns - The new state for the `Form`\n   */\n  getStateFromProps(\n    props: FormProps<T, S, F>,\n    inputFormData?: T\n  ): FormState<T, S, F> {\n    const state: FormState<T, S, F> = this.state || {};\n    const schema = \"schema\" in props ? props.schema : this.props.schema;\n    const uiSchema: UiSchema<T, S, F> =\n      (\"uiSchema\" in props ? props.uiSchema! : this.props.uiSchema!) || {};\n    const edit = typeof inputFormData !== \"undefined\";\n    const liveValidate =\n      \"liveValidate\" in props ? props.liveValidate : this.props.liveValidate;\n    const mustValidate = edit && !props.noValidate && liveValidate;\n    const rootSchema = schema;\n    let schemaUtils: SchemaUtilsType<T, S, F> = state.schemaUtils;\n    if (\n      !schemaUtils ||\n      schemaUtils.doesSchemaUtilsDiffer(props.validator, rootSchema)\n    ) {\n      schemaUtils = createSchemaUtils<T, S, F>(props.validator, rootSchema);\n    }\n    const formData: T = schemaUtils.getDefaultFormState(\n      schema,\n      inputFormData\n    ) as T;\n    const retrievedSchema = schemaUtils.retrieveSchema(schema, formData);\n\n    const getCurrentErrors = (): ValidationData<T> => {\n      if (props.noValidate) {\n        return { errors: [], errorSchema: {} };\n      } else if (!props.liveValidate) {\n        return {\n          errors: state.schemaValidationErrors || [],\n          errorSchema: state.schemaValidationErrorSchema || {},\n        };\n      }\n      return {\n        errors: state.errors || [],\n        errorSchema: state.errorSchema || {},\n      };\n    };\n\n    let errors: RJSFValidationError[];\n    let errorSchema: ErrorSchema<T> | undefined;\n    let schemaValidationErrors: RJSFValidationError[] =\n      state.schemaValidationErrors;\n    let schemaValidationErrorSchema: ErrorSchema<T> =\n      state.schemaValidationErrorSchema;\n    if (mustValidate) {\n      const schemaValidation = this.validate(formData, schema, schemaUtils);\n      errors = schemaValidation.errors;\n      errorSchema = schemaValidation.errorSchema;\n      schemaValidationErrors = errors;\n      schemaValidationErrorSchema = errorSchema;\n    } else {\n      const currentErrors = getCurrentErrors();\n      errors = currentErrors.errors;\n      errorSchema = currentErrors.errorSchema;\n    }\n    if (props.extraErrors) {\n      const merged = schemaUtils.mergeValidationData(\n        { errorSchema, errors },\n        props.extraErrors\n      );\n      errorSchema = merged.errorSchema;\n      errors = merged.errors;\n    }\n    const idSchema = schemaUtils.toIdSchema(\n      retrievedSchema,\n      uiSchema[\"ui:rootFieldId\"],\n      formData,\n      props.idPrefix,\n      props.idSeparator\n    );\n    const nextState: FormState<T, S, F> = {\n      schemaUtils,\n      schema,\n      uiSchema,\n      idSchema,\n      formData,\n      edit,\n      errors,\n      errorSchema,\n      schemaValidationErrors,\n      schemaValidationErrorSchema,\n    };\n    return nextState;\n  }\n\n  /** React lifecycle method that is used to determine whether component should be updated.\n   *\n   * @param nextProps - The next version of the props\n   * @param nextState - The next version of the state\n   * @returns - True if the component should be updated, false otherwise\n   */\n  shouldComponentUpdate(\n    nextProps: FormProps<T, S, F>,\n    nextState: FormState<T, S, F>\n  ): boolean {\n    return shouldRender(this, nextProps, nextState);\n  }\n\n  /** Validates the `formData` against the `schema` using the `altSchemaUtils` (if provided otherwise it uses the\n   * `schemaUtils` in the state), returning the results.\n   *\n   * @param formData - The new form data to validate\n   * @param schema - The schema used to validate against\n   * @param altSchemaUtils - The alternate schemaUtils to use for validation\n   */\n  validate(\n    formData: T | undefined,\n    schema = this.props.schema,\n    altSchemaUtils?: SchemaUtilsType<T, S, F>\n  ): ValidationData<T> {\n    const schemaUtils = altSchemaUtils\n      ? altSchemaUtils\n      : this.state.schemaUtils;\n    const { customValidate, transformErrors, uiSchema } = this.props;\n    const resolvedSchema = schemaUtils.retrieveSchema(schema, formData);\n    return schemaUtils\n      .getValidator()\n      .validateFormData(\n        formData,\n        resolvedSchema,\n        customValidate,\n        transformErrors,\n        uiSchema\n      );\n  }\n\n  /** Renders any errors contained in the `state` in using the `ErrorList`, if not disabled by `showErrorList`. */\n  renderErrors(registry: Registry<T, S, F>) {\n    const { errors, errorSchema, schema, uiSchema } = this.state;\n    const { formContext } = this.props;\n    const options = getUiOptions<T, S, F>(uiSchema);\n    const ErrorListTemplate = getTemplate<\"ErrorListTemplate\", T, S, F>(\n      \"ErrorListTemplate\",\n      registry,\n      options\n    );\n\n    if (errors && errors.length) {\n      return (\n        <ErrorListTemplate\n          errors={errors}\n          errorSchema={errorSchema || {}}\n          schema={schema}\n          uiSchema={uiSchema}\n          formContext={formContext}\n        />\n      );\n    }\n    return null;\n  }\n\n  /** Returns the `formData` with only the elements specified in the `fields` list\n   *\n   * @param formData - The data for the `Form`\n   * @param fields - The fields to keep while filtering\n   */\n  getUsedFormData = (\n    formData: T | undefined,\n    fields: string[][]\n  ): T | undefined => {\n    // For the case of a single input form\n    if (fields.length === 0 && typeof formData !== \"object\") {\n      return formData;\n    }\n\n    // _pick has incorrect type definition, it works with string[][], because lodash/hasIn supports it\n    const data: GenericObjectType = _pick(\n      formData,\n      fields as unknown as string[]\n    );\n    if (Array.isArray(formData)) {\n      return Object.keys(data).map((key: string) => data[key]) as unknown as T;\n    }\n\n    return data as T;\n  };\n\n  /** Returns the list of field names from inspecting the `pathSchema` as well as using the `formData`\n   *\n   * @param pathSchema - The `PathSchema` object for the form\n   * @param [formData] - The form data to use while checking for empty objects/arrays\n   */\n  getFieldNames = (pathSchema: PathSchema<T>, formData?: T): string[][] => {\n    const getAllPaths = (\n      _obj: GenericObjectType,\n      acc: string[][] = [],\n      paths: string[][] = [[]]\n    ) => {\n      Object.keys(_obj).forEach((key: string) => {\n        if (typeof _obj[key] === \"object\") {\n          const newPaths = paths.map((path) => [...path, key]);\n          // If an object is marked with additionalProperties, all its keys are valid\n          if (\n            _obj[key][RJSF_ADDITONAL_PROPERTIES_FLAG] &&\n            _obj[key][NAME_KEY] !== \"\"\n          ) {\n            acc.push(_obj[key][NAME_KEY]);\n          } else {\n            getAllPaths(_obj[key], acc, newPaths);\n          }\n        } else if (key === NAME_KEY && _obj[key] !== \"\") {\n          paths.forEach((path) => {\n            const formValue = _get(formData, path);\n            // adds path to fieldNames if it points to a value\n            // or an empty object/array\n            if (typeof formValue !== \"object\" || _isEmpty(formValue)) {\n              acc.push(path);\n            }\n          });\n        }\n      });\n      return acc;\n    };\n\n    return getAllPaths(pathSchema);\n  };\n\n  /** Function to handle changes made to a field in the `Form`. This handler receives an entirely new copy of the\n   * `formData` along with a new `ErrorSchema`. It will first update the `formData` with any missing default fields and\n   * then, if `omitExtraData` and `liveOmit` are turned on, the `formData` will be filterer to remove any extra data not\n   * in a form field. Then, the resulting formData will be validated if required. The state will be updated with the new\n   * updated (potentially filtered) `formData`, any errors that resulted from validation. Finally the `onChange`\n   * callback will be called if specified with the updated state.\n   *\n   * @param formData - The new form data from a change to a field\n   * @param newErrorSchema - The new `ErrorSchema` based on the field change\n   * @param id - The id of the field that caused the change\n   */\n  onChange = (\n    formData: T | undefined,\n    newErrorSchema?: ErrorSchema<T>,\n    id?: string\n  ) => {\n    const {\n      extraErrors,\n      omitExtraData,\n      liveOmit,\n      noValidate,\n      liveValidate,\n      onChange,\n    } = this.props;\n    const { schemaUtils, schema } = this.state;\n    if (isObject(formData) || Array.isArray(formData)) {\n      const newState = this.getStateFromProps(this.props, formData);\n      formData = newState.formData;\n    }\n\n    const mustValidate = !noValidate && liveValidate;\n    let state: Partial<FormState<T, S, F>> = { formData, schema };\n    let newFormData = formData;\n\n    if (omitExtraData === true && liveOmit === true) {\n      const retrievedSchema = schemaUtils.retrieveSchema(schema, formData);\n      const pathSchema = schemaUtils.toPathSchema(\n        retrievedSchema,\n        \"\",\n        formData\n      );\n\n      const fieldNames = this.getFieldNames(pathSchema, formData);\n\n      newFormData = this.getUsedFormData(formData, fieldNames);\n      state = {\n        formData: newFormData,\n      };\n    }\n\n    if (mustValidate) {\n      const schemaValidation = this.validate(newFormData);\n      let errors = schemaValidation.errors;\n      let errorSchema = schemaValidation.errorSchema;\n      const schemaValidationErrors = errors;\n      const schemaValidationErrorSchema = errorSchema;\n      if (extraErrors) {\n        const merged = schemaUtils.mergeValidationData(\n          schemaValidation,\n          extraErrors\n        );\n        errorSchema = merged.errorSchema;\n        errors = merged.errors;\n      }\n      state = {\n        formData: newFormData,\n        errors,\n        errorSchema,\n        schemaValidationErrors,\n        schemaValidationErrorSchema,\n      };\n    } else if (!noValidate && newErrorSchema) {\n      const errorSchema = extraErrors\n        ? (mergeObjects(\n            newErrorSchema,\n            extraErrors,\n            \"preventDuplicates\"\n          ) as ErrorSchema<T>)\n        : newErrorSchema;\n      state = {\n        formData: newFormData,\n        errorSchema: errorSchema,\n        errors: schemaUtils.getValidator().toErrorList(errorSchema),\n      };\n    }\n    this.setState(\n      state as FormState<T, S, F>,\n      () => onChange && onChange({ ...this.state, ...state }, id)\n    );\n  };\n\n  /** Callback function to handle when a field on the form is blurred. Calls the `onBlur` callback for the `Form` if it\n   * was provided.\n   *\n   * @param id - The unique `id` of the field that was blurred\n   * @param data - The data associated with the field that was blurred\n   */\n  onBlur = (id: string, data: any) => {\n    const { onBlur } = this.props;\n    if (onBlur) {\n      onBlur(id, data);\n    }\n  };\n\n  /** Callback function to handle when a field on the form is focused. Calls the `onFocus` callback for the `Form` if it\n   * was provided.\n   *\n   * @param id - The unique `id` of the field that was focused\n   * @param data - The data associated with the field that was focused\n   */\n  onFocus = (id: string, data: any) => {\n    const { onFocus } = this.props;\n    if (onFocus) {\n      onFocus(id, data);\n    }\n  };\n\n  /** Callback function to handle when the form is submitted. First, it prevents the default event behavior. Nothing\n   * happens if the target and currentTarget of the event are not the same. It will omit any extra data in the\n   * `formData` in the state if `omitExtraData` is true. It will validate the resulting `formData`, reporting errors\n   * via the `onError()` callback unless validation is disabled. Finally it will add in any `extraErrors` and then call\n   * back the `onSubmit` callback if it was provided.\n   *\n   * @param event - The submit HTML form event\n   */\n  onSubmit = (event: React.FormEvent<any>) => {\n    event.preventDefault();\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n\n    event.persist();\n    const { omitExtraData, extraErrors, noValidate, onSubmit } = this.props;\n    let { formData: newFormData } = this.state;\n    const { schema, schemaUtils } = this.state;\n\n    if (omitExtraData === true) {\n      const retrievedSchema = schemaUtils.retrieveSchema(schema, newFormData);\n      const pathSchema = schemaUtils.toPathSchema(\n        retrievedSchema,\n        \"\",\n        newFormData\n      );\n\n      const fieldNames = this.getFieldNames(pathSchema, newFormData);\n\n      newFormData = this.getUsedFormData(newFormData, fieldNames);\n    }\n\n    if (noValidate || this.validateForm()) {\n      // There are no errors generated through schema validation.\n      // Check for user provided errors and update state accordingly.\n      const errorSchema = extraErrors || {};\n      const errors = extraErrors\n        ? schemaUtils.getValidator().toErrorList(extraErrors)\n        : [];\n      this.setState(\n        {\n          formData: newFormData,\n          errors,\n          errorSchema,\n          schemaValidationErrors: [],\n          schemaValidationErrorSchema: {},\n        },\n        () => {\n          if (onSubmit) {\n            onSubmit(\n              { ...this.state, formData: newFormData, status: \"submitted\" },\n              event\n            );\n          }\n        }\n      );\n    }\n  };\n\n  /** Returns the registry for the form */\n  getRegistry(): Registry<T, S, F> {\n    const { schemaUtils } = this.state;\n    const { fields, templates, widgets, formContext } = getDefaultRegistry<\n      T,\n      S,\n      F\n    >();\n    return {\n      fields: { ...fields, ...this.props.fields },\n      templates: {\n        ...templates,\n        ...this.props.templates,\n        ButtonTemplates: {\n          ...templates.ButtonTemplates,\n          ...this.props.templates?.ButtonTemplates,\n        },\n      },\n      widgets: { ...widgets, ...this.props.widgets },\n      rootSchema: this.props.schema,\n      formContext: this.props.formContext || formContext,\n      schemaUtils,\n    };\n  }\n\n  /** Provides a function that can be used to programmatically submit the `Form` */\n  submit() {\n    if (this.formElement.current) {\n      this.formElement.current.dispatchEvent(\n        new CustomEvent(\"submit\", {\n          cancelable: true,\n        })\n      );\n      this.formElement.current.requestSubmit();\n    }\n  }\n\n  /** Attempts to focus on the field associated with the `error`. Uses the `property` field to compute path of the error\n   * field, then, using the `idPrefix` and `idSeparator` converts that path into an id. Then the input element with that\n   * id is attempted to be found using the `formElement` ref. If it is located, then it is focused.\n   *\n   * @param error - The error on which to focus\n   */\n  focusOnError(error: RJSFValidationError) {\n    const { idPrefix = \"root\", idSeparator = \"_\" } = this.props;\n    const { property } = error;\n    const path = _toPath(property);\n    if (path[0] === \"\") {\n      // Most of the time the `.foo` property results in the first element being empty, so replace it with the idPrefix\n      path[0] = idPrefix;\n    } else {\n      // Otherwise insert the idPrefix into the first location using unshift\n      path.unshift(idPrefix);\n    }\n\n    const elementId = path.join(idSeparator);\n    let field = this.formElement.current.elements[elementId];\n    if (!field) {\n      // if not an exact match, try finding an input starting with the element id (like radio buttons or checkboxes)\n      field = this.formElement.current.querySelector(`input[id^=${elementId}`);\n    }\n    if (field) {\n      field.focus();\n    }\n  }\n\n  /** Programmatically validate the form. If `onError` is provided, then it will be called with the list of errors the\n   * same way as would happen on form submission.\n   *\n   * @returns - True if the form is valid, false otherwise.\n   */\n  validateForm() {\n    const { extraErrors, focusOnFirstError, onError } = this.props;\n    const { formData } = this.state;\n    const { schemaUtils } = this.state;\n    const schemaValidation = this.validate(formData);\n    let errors = schemaValidation.errors;\n    let errorSchema = schemaValidation.errorSchema;\n    const schemaValidationErrors = errors;\n    const schemaValidationErrorSchema = errorSchema;\n    if (errors.length > 0) {\n      if (extraErrors) {\n        const merged = schemaUtils.mergeValidationData(\n          schemaValidation,\n          extraErrors\n        );\n        errorSchema = merged.errorSchema;\n        errors = merged.errors;\n      }\n      if (focusOnFirstError) {\n        this.focusOnError(schemaValidation.errors[0]);\n      }\n      this.setState(\n        {\n          errors,\n          errorSchema,\n          schemaValidationErrors,\n          schemaValidationErrorSchema,\n        },\n        () => {\n          if (onError) {\n            onError(errors);\n          } else {\n            console.error(\"Form validation failed\", errors);\n          }\n        }\n      );\n      return false;\n    }\n    return true;\n  }\n\n  /** Renders the `Form` fields inside the <form> | `tagName` or `_internalFormWrapper`, rendering any errors if\n   * needed along with the submit button or any children of the form.\n   */\n  render() {\n    const {\n      children,\n      id,\n      idPrefix,\n      idSeparator,\n      className = \"\",\n      tagName,\n      name,\n      method,\n      target,\n      action,\n      autoComplete,\n      enctype,\n      acceptcharset,\n      noHtml5Validate = false,\n      disabled = false,\n      readonly = false,\n      formContext,\n      showErrorList = \"top\",\n      _internalFormWrapper,\n    } = this.props;\n\n    const { schema, uiSchema, formData, errorSchema, idSchema } = this.state;\n    const registry = this.getRegistry();\n    const { SchemaField: _SchemaField } = registry.fields;\n    const { SubmitButton } = registry.templates.ButtonTemplates;\n    // The `semantic-ui` and `material-ui` themes have `_internalFormWrapper`s that take an `as` prop that is the\n    // PropTypes.elementType to use for the inner tag, so we'll need to pass `tagName` along if it is provided.\n    // NOTE, the `as` prop is native to `semantic-ui` and is emulated in the `material-ui` theme\n    const as = _internalFormWrapper ? tagName : undefined;\n    const FormTag = _internalFormWrapper || tagName || \"form\";\n\n    return (\n      <FormTag\n        className={className ? className : \"rjsf\"}\n        id={id}\n        name={name}\n        method={method}\n        target={target}\n        action={action}\n        autoComplete={autoComplete}\n        encType={enctype}\n        acceptCharset={acceptcharset}\n        noValidate={noHtml5Validate}\n        onSubmit={this.onSubmit}\n        as={as}\n        ref={this.formElement}\n      >\n        {showErrorList === \"top\" && this.renderErrors(registry)}\n        <_SchemaField\n          name=\"\"\n          schema={schema}\n          uiSchema={uiSchema}\n          errorSchema={errorSchema}\n          idSchema={idSchema}\n          idPrefix={idPrefix}\n          idSeparator={idSeparator}\n          formContext={formContext}\n          formData={formData}\n          onChange={this.onChange}\n          onBlur={this.onBlur}\n          onFocus={this.onFocus}\n          registry={registry}\n          disabled={disabled}\n          readonly={readonly}\n        />\n        {children ? (\n          children\n        ) : (\n          <SubmitButton uiSchema={uiSchema} registry={registry} />\n        )}\n        {showErrorList === \"bottom\" && this.renderErrors(registry)}\n      </FormTag>\n    );\n  }\n}\n","import React, { ForwardedRef, forwardRef } from \"react\";\n\nimport Form, { FormProps } from \"./components/Form\";\nimport { FormContextType, RJSFSchema, StrictRJSFSchema } from \"@rjsf/utils\";\n\n/** The properties for the `withTheme` function, essentially a subset of properties from the `FormProps` that can be\n * overridden while creating a theme\n */\nexport type ThemeProps<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n> = Pick<\n  FormProps<T, S, F>,\n  \"fields\" | \"templates\" | \"widgets\" | \"_internalFormWrapper\"\n>;\n\n/** A Higher-Order component that creates a wrapper around a `Form` with the overrides from the `WithThemeProps` */\nexport default function withTheme<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(themeProps: ThemeProps<T, S, F>): React.ComponentType<FormProps<T, S, F>> {\n  return forwardRef(\n    (\n      { fields, widgets, templates, ...directProps }: FormProps<T, S, F>,\n      ref: ForwardedRef<Form<T, S, F>>\n    ) => {\n      fields = { ...themeProps?.fields, ...fields };\n      widgets = { ...themeProps?.widgets, ...widgets };\n      templates = {\n        ...themeProps?.templates,\n        ...templates,\n        ButtonTemplates: {\n          ...themeProps?.templates?.ButtonTemplates,\n          ...templates?.ButtonTemplates,\n        },\n      };\n\n      return (\n        <Form<T, S, F>\n          {...themeProps}\n          {...directProps}\n          fields={fields}\n          widgets={widgets}\n          templates={templates}\n          ref={ref}\n        />\n      );\n    }\n  );\n}\n"],"names":["generateRowId","nanoid","generateKeyedFormData","formData","Array","isArray","map","item","key","keyedToPlainFormData","keyedFormData","keyedItem","ArrayField","props","_getNewFormDataRow","schema","registry","schemaUtils","itemSchema","items","isFixedItems","allowAdditionalItems","additionalItems","getDefaultFormState","onAddClick","event","_handleAddClick","onAddIndexClick","index","onDropIndexClick","preventDefault","onChange","errorSchema","state","newErrorSchema","idx","i","parseInt","set","newKeyedFormData","filter","_","setState","updatedKeyedFormData","onReorderClick","newIndex","currentTarget","blur","reOrderArray","_newKeyedFormData","slice","splice","onChangeForIndex","value","id","arrayData","newFormData","jsonValue","onSelectChange","idSchema","undefined","$id","getDerivedStateFromProps","nextProps","prevState","nextFormData","previousKeyedFormData","length","previousKeyedFormDatum","isItemRequired","type","includes","canAddItem","formItems","uiSchema","getUiOptions","addable","maxItems","newKeyedFormDataRow","push","render","ITEMS_KEY","uiOptions","UnsupportedFieldTemplate","getTemplate","React","reason","isMultiSelect","renderMultiSelect","isCustomWidget","renderCustomWidget","renderFixedArray","isFilesArray","renderFiles","renderNormalArray","name","disabled","readonly","autofocus","required","onBlur","onFocus","idPrefix","idSeparator","rawErrors","title","formContext","_schemaItems","isObject","itemsSchema","retrieveSchema","canAdd","arrayProps","itemCast","itemErrorSchema","itemIdPrefix","itemIdSchema","toIdSchema","renderArrayFieldItem","canMoveUp","canMoveDown","itemData","itemUiSchema","totalItems","className","Template","createElement","hideError","placeholder","widgets","widget","options","_excluded","Widget","getWidget","multiple","label","enumOptions","optionsList","itemSchemas","additionalSchema","concat","additional","canRemove","fields","ArraySchemaField","SchemaField","ItemSchemaField","orderable","removable","has","moveUp","moveDown","remove","toolbar","Object","keys","some","children","hasToolbar","hasMoveUp","hasMoveDown","hasRemove","get","Component","BooleanField","oneOf","option","o","schemaWithEnumNames","enums","enumNames","every","v","UNKNOWN_OPTION_PREFIX","AnyOfField","onOptionChange","selectedOption","retrievedOptions","intOption","newOption","oldOption","sanitizeDataForNewSchema","getFieldId","opt","getMatchingOption","componentDidUpdate","prevProps","newState","deepEquals","matchingOption","getClosestMatchingOption","baseType","_SchemaField","autocomplete","ERRORS_KEY","fieldErrorSchema","omit","optionSchema","assign","optionLabel","toLowerCase","isEmpty","trailingCharMatcherWithPrefix","trailingCharMatcher","NumberField","initialValue","useState","lastValue","setLastValue","StringField","handleChange","useCallback","charAt","processed","match","asNumber","replace","re","RegExp","ObjectField","wasPropertyKeyModified","additionalProperties","onPropertyChange","addedByAdditionalProperties","onDropPropertyClick","copiedFormData","unset","getAvailableKey","preferredKey","duplicateKeySuffixSeparator","newKey","onKeyChange","oldValue","newKeys","keyValues","renamedObj","handleAddClick","apSchema","REF_KEY","$ref","ANY_OF_KEY","ONE_OF_KEY","getDefaultValue","isRequired","indexOf","rawSchema","properties","schemaProperties","description","orderedProperties","orderProperties","order","err","style","color","message","JSON","stringify","templateProps","PROPERTIES_KEY","ADDITIONAL_PROPERTY_FLAG","fieldUiSchema","hidden","fieldIdSchema","content","COMPONENT_TYPES","array","integer","number","object","string","getFieldComponent","field","schemaType","getSchemaType","componentName","anyOf","SchemaFieldRender","_schema","_idSchema","FieldTemplate","DescriptionFieldTemplate","FieldHelpTemplate","FieldErrorTemplate","fieldId","ID_KEY","mergeObjects","handleFieldComponentChange","theId","FieldComponent","Boolean","readOnly","uiSchemaHideError","displayLabel","getDisplayLabel","__errors","UI_OPTIONS_KEY","help","classNames","console","warn","helpComponent","hasErrors","errorsComponent","errors","fieldProps","descriptionId","rawDescription","rawHelp","join","trim","_AnyOfField","_OneOfField","OneOfField","isReplacingAnyOrOneOf","Fragment","isSelect","shouldComponentUpdate","format","defaultWidget","hasWidget","NullField","useEffect","MultiSchemaField","ArrayFieldDescriptionTemplate","ArrayFieldItemTemplate","templates","ButtonTemplates","MoveDownButton","MoveUpButton","RemoveButton","btnStyle","flex","paddingLeft","paddingRight","fontWeight","display","justifyContent","onClick","ArrayFieldTemplate","ArrayFieldTitleTemplate","AddButton","itemProps","TitleFieldTemplate","titleId","BaseInputTemplate","rest","log","Error","inputProps","getInputProps","inputValue","_onChange","target","emptyValue","_onBlur","_onFocus","autoFocus","list","examples","examplesId","ariaDescribedByIds","example","SubmitButton","getSubmitButtonOptions","submitText","norender","submitButtonProps","IconButton","iconType","icon","otherProps","buttonTemplates","DescriptionField","ErrorList","error","stack","REQUIRED_FIELD_SYMBOL","Label","htmlFor","WrapIfAdditionalTemplate","errorId","elem","helpId","ObjectFieldTemplate","prop","canExpand","TitleField","UnsupportedField","keyLabel","defaultValue","border","ErrorListTemplate","rangeOptions","start","stop","pad","readyForChange","values","dateElementProps","time","yearsRange","Date","getFullYear","year","month","day","hour","minute","second","data","range","DateElement","select","rootId","SelectWidget","AltDateWidget","useReducer","action","parseDateString","toDateString","property","handleSetNow","nowDateObj","toJSON","handleClear","elemProps","hideNowButton","href","hideClearButton","AltDateTimeWidget","CheckboxWidget","schemaRequiresTrueValue","checked","handleBlur","handleFocus","CheckboxesWidget","inline","enumDisabled","checkboxesValues","enumOptionsValueForIndex","enumOptionsIsSelected","itemDisabled","disabledCls","enumOptionsSelectValue","enumOptionsDeselectValue","checkbox","optionId","String","ColorWidget","DateWidget","DateTimeWidget","utcToLocal","localToUTC","EmailWidget","addNameToDataURL","dataURL","encodeURIComponent","processFile","file","size","Promise","resolve","reject","reader","window","FileReader","onerror","onload","result","readAsDataURL","processFiles","files","all","from","FilesInfo","filesInfo","fileInfo","extractFileInfo","dataURLs","dataURItoBlob","blob","FileWidget","extractedFilesInfo","useMemo","setFilesInfo","then","filesInfoEvent","newValue","accept","HiddenWidget","PasswordWidget","RadioWidget","Math","random","toString","radio","RangeWidget","getValue","selected","optEmptyVal","selectedIndexes","enumOptionsIndexForValue","TextareaWidget","rows","defaultProps","TextWidget","URLWidget","UpDownWidget","getDefaultRegistry","rootSchema","Form","formElement","getUsedFormData","_pick","getFieldNames","pathSchema","getAllPaths","_obj","acc","paths","forEach","newPaths","path","RJSF_ADDITONAL_PROPERTIES_FLAG","NAME_KEY","formValue","_get","_isEmpty","extraErrors","omitExtraData","liveOmit","noValidate","liveValidate","getStateFromProps","mustValidate","retrievedSchema","toPathSchema","fieldNames","schemaValidation","validate","schemaValidationErrors","schemaValidationErrorSchema","merged","mergeValidationData","getValidator","toErrorList","onSubmit","persist","validateForm","status","validator","createRef","UNSAFE_componentWillReceiveProps","nextState","inputFormData","edit","doesSchemaUtilsDiffer","createSchemaUtils","getCurrentErrors","currentErrors","shouldRender","altSchemaUtils","customValidate","transformErrors","resolvedSchema","validateFormData","renderErrors","getRegistry","submit","current","dispatchEvent","CustomEvent","cancelable","requestSubmit","focusOnError","_toPath","unshift","elementId","elements","querySelector","focus","focusOnFirstError","onError","tagName","method","autoComplete","enctype","acceptcharset","noHtml5Validate","showErrorList","_internalFormWrapper","as","FormTag","encType","acceptCharset","ref","withTheme","themeProps","forwardRef","directProps"],"mappings":"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"}